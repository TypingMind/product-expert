<PRODUCT_KNOWLDEGE_MAP lastUpdated="2025-02-24T03:49:02.792Z">

<OVERVIEW>
## 1. Overview

**Product Name:** TypingMind

**Tagline:** Your Personal AI Workspace

**Core Value Proposition:** TypingMind is a comprehensive AI chat platform designed to enhance the user experience when interacting with various Large Language Models (LLMs). It provides a unified interface for accessing and managing multiple AI models like ChatGPT, Gemini, Claude, and even custom models, using the user's own API keys. TypingMind aims to overcome the limitations of the standard AI model interfaces by offering advanced features, customization options, and organizational tools, allowing users to maximize their productivity and creativity. It also positions itself as a platform to build internal AI platform easily.

**Target User:** AI enthusiasts, developers, researchers, content creators, business professionals, and teams who frequently work with LLMs. It caters to individuals and organizations seeking a more efficient, customizable, and collaborative AI experience. Specifically, it targets those who:

- Want to access multiple AI models from a single platform.
- Require advanced features beyond the basic AI model interfaces.
- Need robust tools for managing and organizing their AI conversations.
- Desire greater control over the AI's behavior and output through customization options.
- Seek to collaborate with teams on AI-powered projects.
- Prioritize data privacy and security by using locally stored data.
- Want to build internal AI platform for their company.

**Key Benefits:**

- **Centralized AI Access:** Eliminates the need to switch between different AI platforms by providing a single interface for multiple models (GPT-4, Gemini, Claude, and custom models).
- **Enhanced User Experience:** Offers a streamlined and intuitive user experience with advanced features that go beyond the capabilities of standard AI model interfaces.
- **Cost Control:** Empowers users to manage their AI costs by connecting their own API keys and paying directly to the AI providers, avoiding additional fees or usage limits imposed by TypingMind.
- **Advanced Customization:** Provides extensive customization options, including custom system instructions, model parameters, and the ability to create and personalize AI agents.
- **Robust Organization:** Includes powerful tools for managing chats, such as search functionality, folder organization, tagging systems, and data export options.
- **Seamless Collaboration:** Facilitates teamwork with features like shared licenses (TypingMind for Teams), allowing teams to collaborate on AI-driven projects and build custom AI portals.
- **Extensive Extensibility:** Supports a wide range of plugins that extend the platform's functionality, enabling tasks like web search, image generation, and integration with other applications.
- **Prioritized Privacy and Security:** Ensures data privacy by storing data locally on the user's device by default, with optional cloud sync and backup for added convenience.

## 2. Key Features

Here's an in-depth look at TypingMind's features:

- **Multi AI Chat Models:**
    - Supports a diverse range of LLMs, including:
        - GPT-4 (and its variants)
        - Gemini
        - Claude
        - Open-source LLMs
        - Custom models (allowing users to connect their own fine-tuned models)
    - Enables seamless switching between models within the same chat interface.
    - Allows users to compare the performance of different models on the same task.
- **No Monthly Fee, No Usage Limit:**
    - Users connect their own API keys from AI providers like OpenAI, Google AI, and Anthropic.
    - TypingMind does not impose any monthly fees or usage limits on the platform itself.
    - Users pay only for the AI usage consumed through their API keys, providing greater cost control.
- **Easily Manage All Chats:**
    - **Search:** Powerful search functionality to quickly find specific conversations or information within chats.
    - **Folders:** Create and organize chats into folders for easy access and categorization.
    - **Tags:** Add tags to chats for enhanced organization and filtering.
    - **Export:** Export chat data in various formats (e.g., text, JSON) for analysis or archival.
    - **Pin Favorite Chats:** Pin important chats for quick access.
    - **Edit & Fork Conversations:** Edit existing conversation or fork it to create a new one.
- **AI Agents, Prompt Library:**
    - Provides a collection of pre-built AI agents designed for specific tasks or domains.
    - Includes a library of community-contributed prompts that can be used to guide the AI's responses.
    - Allows users to create, customize, and manage their own AI agents with specific instructions, prompts, and training data.
- **Text-to-Speech, Voice Input:**
    - Enables voice input for hands-free interaction with AI.
    - Supports multi-language text-to-speech for receiving AI responses in various languages.
    - Offers customizable voice options and settings.
- **Web Search, Vision, DALL-E:**
    - Integrates web search functionality to access real-time information from the internet within the chat interface.
    - Supports image analysis through AI vision capabilities, allowing the AI to understand and respond to images.
    - Enables image generation using DALL-E, allowing users to create images from text descriptions.
- **Control Parameters:**
    - Allows users to adjust key AI model parameters, such as:
        - Temperature (influences the randomness of the AI's responses)
        - Streaming (enables real-time streaming of AI responses)
    - Provides granular control over the AI's behavior and output.
- **Use Unlimited Plugins:**
    - Supports a wide range of plugins that extend the platform's functionality.
    - Allows users to explore and install plugins from a plugin marketplace (coming soon).
    - Enables users to build their own custom plugins to integrate with other applications or services.
- **Upload Documents:**
    - Allows users to upload documents (e.g., PDF, DOCX) and ask the AI questions about their content.
    - Enables the AI to extract information, summarize, or analyze the uploaded documents.
- **Control Context Limit:**
    - Allows users to define the amount of conversation history that the AI remembers.
    - Helps to manage token usage and improve the AI's performance by limiting the context window.
- **Dynamic Context via API (New):**
    - Enables users to integrate live data from external APIs or their own data sources (using Retrieval-Augmented Generation or RAG) into the AI conversations.
    - Allows the AI to access and utilize real-time information to provide more relevant and accurate responses.
- **Chats Sync and Backup:**
    - Automatically syncs chat data across multiple devices.
    - Provides secure cloud backup to prevent data loss.
- **Hotkey & Shortcuts:**
    - Allows users to customize hotkeys for common actions.
    - Offers keyboard shortcuts for efficient navigation and command execution.
- **Beautiful Light/Dark Mode:**
    - Provides both light and dark themes for user preference.
    - Offers a visually appealing and customizable user interface.
- **Personalized AI Agents:**
    - Train the AI on your own instructions, prompts, and training examples.
- **Fetch Live Data:**
    - Let AI fetch content from APIs or implement RAG to get information from your own data sources.
- **Speak with its own voice:**
    - Assign a voice to each AI agent with multi-language support.
- **Use multiple plugins:**
    - Enable any plugins for the AI such as Web Search, DALL-E 3, and more.
- **Mention other AI agents in the chat:**
    - Call other AI agents for help in the same conversation.

## 3. Additional Details

**Model Configuration:**

- **Custom System Instruction:** Set specific instructions for the AI model to follow in every conversation.
- **Custom Model Parameters:** Fine-tune the model's behavior with parameters like temperature, top_p, etc.
- **Custom Endpoint & Proxy:** Use your own custom API endpoints or proxy servers.

**Chat Experience:**

- **Language Output Control:** Control the language of the AI's output.
- **Multi-Conversations in Parallel:** Engage in multiple conversations simultaneously.
- **Dynamic Context Limit:** Control how much of the conversation the AI remembers.

**Chat Management:**

- **Edit & Fork Conversations:** Modify existing conversations or create new ones based on previous interactions.
- **Pin Favorite Chats:** Keep important conversations easily accessible.
- **Migrate from OpenAI ChatGPT:** Import your chat history from OpenAI.

**User Interface:**

- **Wide Screen Support:** Optimized for use on wide screens.
- **Custom Avatar:** Customize your avatar within the platform.
- **Sound Notification:** Receive sound notifications for new messages.

**Security and Privacy:**

- **Private By Default:** Data stored locally on your device.
- **API Key Encryption With Password:** Secure your API keys with a password.
- **API Tokens Cost Estimation:** Estimate the cost of your API token usage.

**Integrations:**

- **MacOS App (PWA):** Progressive Web App for macOS.
- **Web Search & Live Data:** Access real-time information from the web.
- **Search Keyword Suggestions:** Get suggestions for search keywords.
- **Domain Check Integration:** Integrate with domain checking services.
- **CodePen Integration:** Integrate with CodePen.

## 4. Plugins

TypingMind offers a variety of plugins to extend its functionality:

- **Web Search:** Search the internet using Google Search.
- **Perplexity Search:** Search for information from the internet using Perplexity.
- **DALL-E 3:** Generate images using DALL-E 3 based on image descriptions.
- **Stable Diffusion v3 Image:** Generate images using Stable Diffusion v3 based on a text description.
- **Image Search:** Search for images from the internet using Google Search.
- **Interactive Canvas:** Render an interactive canvas with HTML source to the user interface.
- **Web Page Reader:** Read the content of a web page via its URL.
- **Any Custom Plugins:** Create your plugins such as Azure AI Search, Sound Effect Generator, and more.

## 5. Pricing

TypingMind offers a lifetime license with three tiers:

- **Standard:** $39 (Basic Features, Unlock AI Agents, Voice Input, Share Chats, Remove Ads/Popups)
- **Extended:** $79 (Image Generation, Web Search, Text-to-Speech / Vision / Images, Upload Documents)
- **Premium:** $99 (Unlimited Plugins, Project Folders, Artifacts, Canvas Editor, Free Updates)

There is also a "TypingMind for Teams" option for building custom AI chat portals for teams.

## 6. Security

- **Data stored locally by default**: Your data remains securely stored on your device. There's no training conducted on your chats.
- **Optional Cloud Sync & Backup**: Allow your data sync across multiple devices and prevent unexpected data loss. Activation is fully optional.
</OVERVIEW>

<MAIN_INTERFACE>
### 1. Overall Layout

The TypingMind interface is divided into two main sections: a sidebar on the left and a main content area on the right.  The design appears clean and modern, utilizing a light color scheme.

### 2. Left Sidebar

- **Top Section:**
    - **App Title/Logo:** Absent in this view, but typically located at the top.
    - **"Chat" Button (Selected):** Indicates the user is currently in the Chat view. The icon appears to be a speech bubble. The button is highlighted in blue indicating it's active.
    - **"New Chat" Button:** A button with a speech bubble icon and the text "New Chat". Presumably, this starts a new conversation.
    - **User Profile Icon:** A circular icon representing the user's profile, potentially with an avatar image.
- **Search Bar:** Located below the buttons, a search bar with the placeholder text "Search chats" and a magnifying glass icon. This allows users to search through their existing conversations.
- **Chat Management Tools:** To the right of the Search bar are icons suggestive of chat management functions:
    - Create Folder
    - Sort
    - Filter
- **Navigation Menu (Icons):** A vertical menu of icons is placed on the far left of the sidebar, providing access to different sections of the application:
    - **Chat (Selected):** (As above)
    - **Agents:** Navigates to AI Agent Management.
    - **Prompts:** Navigates to the Prompt Library.
    - **Plugins:** Navigates to the Plugin Marketplace/Management.
    - **Models:** Navigates to model management
    - **Teams:** Navigates to team management features
    - **Settings:** Navigates to the application settings.
- **Chat List:** Occupies the majority of the sidebar space. It displays a list of recent chats and chat folders.
    - **Folders:** Categorized chats within folders, with the folder name and the number of chats inside in parentheses.
    - **Individual Chats:** Displayed with:
        - **AI Avatar:** An icon indicating an AI agent or a default avatar.
        - **Chat Title:** A descriptive title for the conversation.
        - **Preview Text:** A snippet of the most recent message in the chat.
        - **Timestamp:** Indicates how long ago the last message was sent (e.g., "42m", "2d", "3d", "4d").
    - **Folder and Chat Actions:** To the right of each folder and some of the individual chats, "+" (add to folder), a pencil icon (edit), and a trash can icon (delete).
- **Bottom Section:**
    - The user's avatar is shown.

### 3. Main Content Area (Right Side)

- **Top Bar:**
    - **Back Arrow:** Navigates back to the main chat list.
    - **AI Model Information:** Displays the currently selected AI model (e.g., "Claude 3.5 Sonnet"). A dropdown menu suggests the ability to switch between models.
    - **Model Settings:** An icon to configure the current model, and an indicator for the number of messages in context.
    - **More Options:** Three dots icon, suggesting more menu options.
- **TypingMind Branding:** The TypingMind logo is prominently displayed.
- **AI Agents Section:**
    - **"Your AI agents" Title:** Indicates this section displays the user's configured AI agents.
    - **Layout Toggle:** Two icons to switch between list and grid view of the AI agents.
    - **"Edit" and "View all (43)" Links:** Provide options to edit the displayed agents or view all available agents.
    - **AI Agent Cards:** Displayed in a grid format, each card represents an individual AI agent. Each card includes:
        - **Icon:** An icon or image associated with the AI agent.
        - **Title:** The name of the AI agent (e.g., "Cold Email Template", "Pro Coder", "Graphic Designer", "Strategic Market Analyst", "Blog Image Generator").
        - **Description:** A brief description of the AI agent's purpose or capabilities.
- **Input Area:**
    - **"Press "/" to focus input" Placeholder:** Indicates a shortcut to focus the input field.
    - **Formatting/Action Buttons:** A set of icons offering various formatting and action options:
        - "@": Mention
        - Attachment
        - Document Upload
        - Edit
        - Attach File
        - Microphone (Voice Input)

### 4. General Observations

- The UI is visually clean and organized.
- Icons are used extensively for actions and navigation.
- The focus is on ease of access to chats and AI agents.
</MAIN_INTERFACE>

<CHAT_FEATURES_OVERVIEW>
### Chat Features

- **Message Input Field:**
    - **Purpose:** This is the primary area where users compose and input their prompts, questions, or commands to interact with the AI model.
    - **Placeholder Text:** "Press "/" to focus input" - Informs the user about a keyboard shortcut to quickly focus on the input field, improving efficiency.
    - **Live Token Count:** Displayed dynamically as the user types, providing immediate feedback on the length and complexity of the input, which can be helpful for managing API costs and context window limitations. The token count is displayed as "-[number] tokens".
    - **Send Button:** The primary action button to submit the composed message to the AI for processing. Appears after typing in the input field.
    - **Stop Button:** Replaces the "Send" button while the AI is processing a request. Allows the user to interrupt the AI's response generation.
- **AI Agent Mention (@ Functionality):**
    - **Activation:** Typing the "@" symbol in the input field triggers the AI Agent mention feature.
    - **AI Agent Selection:** A popup or dropdown appears, displaying a list of available AI Agents.
    - **Searchable List:** The AI Agent list typically includes a search bar ("Search AI agents...") to quickly find specific agents by name or function.
    - **Agent Information:** Each listed AI Agent displays its name (e.g., "Pro Coder", "Graphic Designer") and a brief description of its capabilities, helping users choose the appropriate agent.
    - **Agent Insertion:** Selecting an AI Agent from the list inserts a special mention tag (e.g.,@[AgentName]) into the input field. This tag signals the AI to utilize the specified agent for the current message.
- **Formatting/Action Buttons:**
    - **"@ (Mention AI Agent)":**
        - **Function:** Allows the user to invoke and integrate a specific AI Agent into the conversation.
        - **Workflow:** Upon clicking, a searchable list of AI Agents appears, allowing the user to select an agent. The selected agent is then tagged in the input field.
    - **Search:**
        - **Function**: Allows user to search for prompt, AI agents, or chats.
        - **Workflow**: Upon clicking, a popup window will show up. The user can type in the search bar and press "Enter" or use mouse to click on the options.
        - **Options**:
        - `**Open AI Agents**`
        - `**Open Prompt Library**`
        - `**Open Model Settings**`
        - `**ESC to close**: User can press ESC key to close the search popup`
        - `**Up/Down Arrow**: User can use up and down arrow to navigate through the options`
        - `**Enter to select**: User can press "Enter" key to select the options`
    - **Output Settings:**
        - **Function:** Provides granular control over the characteristics of the AI's response.
        - **Output Format:** Dictates the structure and style of the AI's output (e.g., "Default", "Concise", "Step-by-step", "Extreme Detail", "ELIS5", "Essay", "Report", "Summary", "Table", "FAQ", "Listicle", "Interview", "Review", "News", "Opinion", "Tutorial", "Case Study").
        - **Tone:** Influences the emotional and attitudinal expression in the AI's response (e.g., "Default", "Authoritative", "Clinical", "Cold", "Confident", "Cynical", "Emotional", "Empathetic", "Formal", "Friendly", "Humorous", "Informal", "Ironic", "Optimistic", "Pessimistic", "Sarcastic", "Serious").
        - **Writing Style:** Determines the stylistic qualities of the AI's writing (e.g., "Default", "Academic", "Analytical", "Argumentative", "Conversational", "Creative", "Critical", "Descriptive", "Epigrammatic", "Epistolary", "Expository", "Impassioned", "Journalistic", "Lyric", "Narrative", "Objective", "Persuasive", "Poetic", "Satirical", "Scientific", "Subjective").
        - **Language:** Sets the language in which the AI will respond (e.g., "Default", "English", "Español", "Français", "Deutsch", "Italiano", "Português", "Polski").
        - **Reset to Default Button:** Resets all output settings to their default values.
    - **Attachment:**
        - **Function:** Enables users to attach files (e.g., images, documents) to the chat for the AI to analyze or use as context.
        - **File Selection:** Opens a standard file dialog, allowing the user to browse and select files from their local device.
        - **Supported File Types:** Depends on the enabled plugins and the AI model's capabilities. Common types include PDF, DOCX, TXT, JPG, PNG.
        - **Cancel button**: Cancels the file selection process
    - **Microphone (Voice Input):**
        - **Function:** Initiates voice input, allowing users to dictate their messages instead of typing.
        - **Audio Input Popup:** Displays a popup window to configure the voice input settings.
            - **Speech-to-Text Provider:**
                - **Web API (Free):** Leverages the browser's built-in speech recognition API.
                - **OpenAI Whisper:** Utilizes OpenAI's Whisper model for transcription. May require an OpenAI API key.
                    - **OpenAI Whisper Prompt:** Allows you to input the prompt for OpenAI Whisper API
                - **Groq Whisper:** Employs Groq's Whisper service for potentially faster and more efficient transcription. Requires a Groq API key.
                    - **Groq API Key (Register Here)**: The input to the Groq API Key with a link to register.
                    - **Check Key**: Check the Groq API Key
                    - **Whisper Model:** Offers a choice of Whisper models (e.g., "Whisper large-v3", "Distil-Whisper English") to balance accuracy and speed.
                    - **Groq Whisper Prompt**: Allows you to input the prompt for Groq Whisper API
                - **Azure Whisper:** Integrates with Azure's Cognitive Services for speech-to-text conversion. Requires an Azure API endpoint and key.
                    - **Azure Whisper API Endpoint**: The input for Azure Whisper API Endpoint with a link for instruction.
                    - **Azure Whisper API Key**: The input for Azure Whisper API Key with a link for instruction.
                    - **How to get one**: A link that lead to instruction page
                - **Auto start recording when open:** Automatically begins recording as soon as the Audio Input popup appears.
                - **Auto send the message after speaking:** Automatically submits the transcribed text as a message once the user stops speaking.
                - **Finish Button:** Completes the voice input process and (if "Auto send" is disabled) prepares the transcribed text for sending.
                - **Cancel Button:** Cancels the voice input process.
            - **Audio Input Feedback:** The popup typically displays a visual representation of the audio input level and a "Listening..." indicator.
- **Message Display (User and AI):**
    - **Visual Distinction:** User messages and AI responses are visually separated using distinct speech bubble styles, avatars, or background colors.
    - **Avatars:** User and AI Agents are represented by avatars, providing visual cues for identifying the message source.
    - **Timestamps:** Timestamps (e.g., "11:28", "1m", "48m") indicate when each message was sent, maintaining chronological context.
- **Message Actions:**
    - **Access:** Message actions are typically revealed by hovering the mouse cursor over a specific message.
    - **Edit (User Messages Only):**
        - **Function:** Allows the user to modify the content of their own messages.
        - **Workflow:** Clicking the "Edit" icon transforms the message into an editable text field.
        - **Update Button:** After editing, the user clicks the "Update" button to save the changes.
        - **Cancel Button:** Cancels the editing process, reverting to the original message content.
    - **Copy:**
        - **Function:** Copies the complete text of the message to the clipboard.
        - **Feedback:** A brief visual confirmation (e.g., "Copied!") is displayed to indicate successful copying.
    - **More Options (Three Dots Icon):**
        - **Function:** Provides access to a menu of additional message-specific actions.
        - **Pin:**
            - **Function:** Designates a message as important and keeps it readily accessible.
            - **Pinning Process:** Clicking "Pin" initially highlights the message. A confirmation prompt ("Sure?") may appear to confirm the pinning action.
            - **Visual Indicator:** A pin icon is displayed on the pinned message.
        - **Delete:**
            - **Function:** Removes the message from the chat history.
            - **Confirmation:** A confirmation prompt may appear to prevent accidental deletion.
        - **Show raw:** Shows the raw text of the message in code format.
        - **Play:** Play the message using text-to-speech
        - **Fork chat from here:**
            - **Function:** Creates a new chat session, using the selected message as the starting point for a new conversation thread.
            - **Purpose:** Allows users to explore alternative directions or refine a specific aspect of a previous conversation without altering the original chat history.
- **Pinned Messages Functionality:**
    - **Accessibility:** Pinned messages are accessible via the pin icon located in the chat interface.
    - **Pinned Messages Dialog:**
        - **Display:** Opens a dialog box listing all messages that have been pinned in the current chat.
        - **Message Content:** Each pinned message is displayed with its text content.
        - **Unpin Action:** An "x" icon or similar control allows the user to remove a message from the pinned list.
- **Chat Actions (Bottom Right - Comprehensive):**
    - **New Chat:**
        - **Function:** Initiates a completely new and independent chat session.
    - **Regenerate:**
        - **Function:** Instructs the AI to generate a new response to the user's last message, effectively re-running the prompt.
    - **Settings:**
        - **Show Labels:**
            - **Function:** Toggles the visibility of text labels for the icons in the chat interface.
            - **Purpose:** Can be helpful for new users to learn the functions of each icon or for those who prefer explicit labeling.
        - **List More:**
            - **Function:** Expands the settings menu to reveal a more comprehensive set of options.
        - **Regenerate:** (Duplicate entry - likely for redundancy or quick access). Same function as the "Regenerate" button.
        - **Share:**
            - **Function:** Allows the user to export or share the chat conversation in various formats.
            - **Sharing Options:**
                - **Secret Link:** Creates a unique, unlisted URL that can be shared with others to view the chat.
                - **Text (Markdown):** Exports the chat history as a Markdown-formatted text file.
                - **JSON:** Exports the chat data as a JSON (JavaScript Object Notation) file, suitable for data analysis, archival, or fine-tuning purposes.
                - **HTML Webpage:** Exports the chat as a self-contained HTML file that can be opened in a web browser.
                - **Print / PDF:** Allows the user to print the chat or save it as a PDF document.
        - **Reset Chat:**
            - **Function:** Clears the entire chat history, effectively starting a new conversation from scratch within the same chat session.
        - **Clear Context:**
            - **Function:** Resets the AI's contextual memory of the conversation, but *without* deleting the chat history. The AI will respond to subsequent messages as if they were the beginning of a new conversation.
        - **New Chat:** (Duplicate entry - likely for redundancy or quick access). Same function as the "New Chat" button.
</CHAT_FEATURES_OVERVIEW>

<SIDEBAR_FEATURES>
### Sidebar Features

The sidebar in TypingMind provides the primary navigation and chat management tools. Here's a breakdown of each feature:

### The Workspace Bar

- **Placement:** Located at the left edge of the app as a long narrow workspace navigation.
- **Function:** Allow the user to switch between the main tabs of the app, including “Chat”, “Agents”, “Prompts”, “Plugins”, etc.

### "Chat" tab

- **Icon:** A speech bubble icon.
- **State:** Highlighted (in blue in the screenshot), indicating the active view.
- **Function:** Confirms that the user is currently viewing the chat interface. Clicking it again will refresh the chat interface.

### "New Chat" Button

- **Icon:** A speech bubble icon with a "+" sign.
- **Text:** "New Chat"
- **Function:** Initiates a new, blank chat session.
    - When clicked, a new chat is created and added to the chat list.
    - The main content area switches to the new chat, ready for user input.

### User Profile Icon

- **Shape:** Circular.
- **Content:** Displays the user's avatar or profile image. If no image is set, it may show default initials or a generic user icon.
- **Function:** Clicking this icon typically opens a user profile menu or settings panel, allowing users to:
    - Manage their account information.
    - Change their profile picture.
    - Access application settings.
    - Log out.

### Search Bar

- **Placeholder Text:** "Search chats"
- **Icon:** A magnifying glass icon.
- **Function:** Enables users to search through their existing chat conversations.
    - Typing in the search bar and pressing "Enter" filters the chat list to display only conversations that match the search query.
    - The search considers chat titles and message content.
    - A clear "x" button appear to clear the search.
    - The search results are displayed dynamically.

### Chat Management Tools

These icons are located to the right of the Search bar, offering quick access to organizational features:

- **Create Folder:**
    - **Icon:** A folder icon with a "+" sign.
    - **Function:** Allows users to create new folders to organize their chats.
        - Clicking the icon opens a small input field where the user can type the name of the new folder.
        - After entering the name and pressing "Enter" (or clicking a "Save" button), the new folder is created and added to the chat list.
- **Sort:**
    - **Icon:** An icon with 3 horizontal line, sorted.
    - **Function:** Allows users to sort chats with several options
        - Clicking the icon opens a popup where the user can choose the sort by options
            - **Recent Chats First:** Sort the list of chats with the latest updated chats on top.
            - **Oldest Chats First:** Sort the list of chats with the oldest chats on top.
            - **Title A to Z:** Sort chats alphabetically with A on top.
            - **Title Z to A:** Sort chats alphabetically with Z on top.
        - **Reset** button: Reset the settings
        - **Cancel** button: Cancel the changes
        - **OK** button: Confirm the changes
- **Filter:**
    - **Icon:** A funnel icon.
    - **Function:** Allows users to filter the chats by tags.
        - Clicking the icon opens a popup where the user can choose the filter by tags.
        - A list of tags is displayed.
        - User can select multiple tags.
        - **Reset** button: Reset the settings
        - **Cancel** button: Cancel the changes
        - **OK** button: Confirm the changes

### Chat List

- **Function:** Displays a list of recent chats and chat folders, providing access to existing conversations.
- **Folders:**
    - Represented by a folder icon and the folder name.
    - The number of chats within the folder is displayed in parentheses (e.g., "IMAP (10)").
    - Clicking a folder expands or collapses it to show or hide the chats within.
    - **Folder actions**: To the right of each folder is "+" (add to folder), a pencil icon (edit), and a trash can icon (delete).
- **Individual Chats:**
    - Each chat is displayed with:
        - **AI Avatar:** An icon or image representing the AI agent used in the conversation.
        - **Chat Title:** A descriptive title for the conversation. If no custom title is set, the title may be automatically generated based on the conversation's content or the AI agent used.
        - **Preview Text:** A snippet of the most recent message in the chat, providing a quick overview of the conversation's content.
        - **Timestamp:** Indicates how long ago the last message was sent (e.g., "42m", "2d", "3d", "4d"), helping users prioritize recent conversations.
    - **Chat Actions:**
        - **"+" (Add to folder)**: Add the chat to a folder.
        - **Favorite chat**: Mark the chat as favorite
        - **More options**:
            - **Edit Title:** Allows users to modify the title of the chat.
                - Clicking "Edit Title" transforms the chat title into an editable text field.
                - The user can type a new title and press "Enter" (or click a "Save" button) to save the changes.
            - **Add Tags:** Allows users to add tags to the chat for enhanced organization and filtering.
                - Clicking "Add Tags" opens a dialog box where the user can select existing tags or create new ones.
                - A text input field allows the user to type in a new tag.
                - A list of existing tags is displayed, allowing the user to select from pre-defined options.
                - Clicking "Save" applies the selected tags to the chat.
            - **Move to Folder:** Allows users to move the chat to a different folder.
                - Clicking "Move to Folder" opens a list of available folders.
                - Clicking a folder in the list moves the chat to that folder.
            - **Archive:** Archives the chat, removing it from the main chat list but preserving it for future access.
            - **Export:** Exports the chat data in various formats (e.g., text, JSON) for analysis or archival.
                - Opens a "Save As" dialog box, allowing the user to choose the file name and location.
            - **Share:** Opens a sharing menu with options to:
                - Create a secret link to share the chat.
                - Export the chat as Markdown text.
                - Export the chat as JSON data.
                - Export the chat as an HTML webpage.
                - Print or save the chat as a PDF.
        - **Delete:**
            - **Icon:** A trash can icon.
            - **Function:** Deletes the chat conversation.
            - **Confirmation:** A confirmation prompt ("Click again to confirm") appears to prevent accidental deletion. Clicking the trash can icon again permanently removes the chat.

### 9. Bottom Section (User Avatar)

- **Content:** Displays the user's avatar or profile picture.
- **Function:** Clicking this area may:
    - Open the user profile settings.
    - Display account information.
    - Provide access to a help or support menu.
    - Indicate the user's online status.
</SIDEBAR_FEATURES>

<CLOUD_SYNC_AND_BACKUP_FEATURES>

## Cloud Sync & Backup Features

TypingMind offers robust cloud sync and backup features to ensure data security and accessibility across multiple devices.

### Accessing Cloud Sync & Backup Settings

1. **Locate the User Profile Icon:** Click the user profile icon located in the bottom left-hand corner of the sidebar. This action opens the user menu.
2. **Select "Manage Cloud Sync":** In the user menu, click on the "Manage Cloud Sync" option. This action opens the Cloud Sync & Backup settings dialog.

### Cloud Sync & Backup Settings Dialog Overview

The "Cloud Sync & Backup" settings dialog provides an overview of the account's cloud sync status, storage usage, and sync preferences. It includes the following key sections:

- **Account Information:**
    - **Account Email:** Displays the email address associated with the TypingMind Cloud account.
- **Sync Controls:**
    - **"Sync Changes" Button:** Initiates a manual synchronization of any recent changes made on the current device to the cloud. The button is typically blue in color.
    - **"Re-sync Everything" Button:** Forces a complete re-synchronization of all data between the current device and the cloud, overwriting any local changes with the cloud data. The link is blue in color.
    - **"Last Sync" Information:** Displays the date and time of the most recent successful synchronization. The time is displayed in a human-readable format (e.g., "2/23/2025, 7:13:05 AM (now)").
- **Cloud Storage Information:**
    - **Storage Usage Bar:** A horizontal bar that visually represents the amount of cloud storage currently being used, relative to the total storage limit.
        - The bar is typically green, with the filled portion indicating the percentage of storage used.
        - The bar includes numerical data: "Usage: \[X] KB (\[Y]%)".
    - **"Manage" Dropdown:** A dropdown menu labeled "Manage" provides access to cloud storage management options. Clicking on it, there are options:
        - `Cloud Data`: Open a popup to manage cloud data
        - `Shared Links`: Open a popup to manage shared links
    - **Storage Limit:** Indicates the total cloud storage limit available to the account (e.g., "Limit: 10 MB (Free)").
- **"Select What You Want to Sync" Section:**
    - **Section Header:** A collapsible section labeled "Select what you want to sync" that allows users to selectively enable or disable the synchronization of specific data types.
    - **Data Type List:** A list of checkboxes representing different data types that can be synchronized:
        - Chats: Chat conversations.
        - AI Agents: Custom AI Agent configurations.
        - Prompts: Custom Prompt Library entries.
        - Plugins: Installed plugins and their settings.
        - Profiles: User profile settings.
        - Preferences: Application preferences.
        - Model Settings: Custom model configurations.
        - Keyboard Shortcuts: Custom keyboard shortcut settings.
        - Custom Models: Custom models added by user
        - Plugin Settings: Plugin settings
        - Message Attachments (Images, Files, etc.): Files attached to messages.
        - API Keys & License Key: Stored API keys and license key.
            - The checkboxes are checked by default, indicating that all data types are enabled for synchronization.
            - Unchecking a checkbox prevents the corresponding data type from being synchronized with the cloud.

- **"Storage Upgrade" Section:**
    - **Section Header:** A collapsible section labeled "Storage upgrade" that provides options for increasing the cloud storage limit.
    - **Storage Upgrade Options:** A display with multiple plans for the user to select. User can choose:
        - 1GB for $10 billed every month
        - 5GB for $20 billed every month
    - **Checkout**: After selecting plan, the user will be navigated to the Stripe payment page to fill in payment.
- **1GB Storage**: Shows the current plan that user is using, with a green `Active` status. User can click on `Manage Subscription` to change the settings.

*Tip*:
- After purchasing a license key, the app will prompt you to also login to your cloud sync account under the same email you used for the purhase. While it's possible to use different email for Cloud Sync and License Key, it's recommended to use the same email so that you can easily manage the license key and your cloud sync account in one email.
- Enable Cloud Sync with your License Key synced in the app so that you don't need to enter the license key manually next time you login.

### Manage Cloud Data

1. **Access the Manage Dropdown Menu:** (As described above).
2. **Click `Cloud Data`**: Click the `Cloud Data` to trigger a new popup window.

### Cloud Data Popup Overview

The "Cloud Data" dialog is structured to guide users through the configuration process. It includes the following key sections:

- **Account Information:**
    - **Account Email:** Displays the email address associated with the TypingMind Cloud account.
- **Cloud Storage Information:**
    - **Storage Usage Bar:** A horizontal bar that visually represents the amount of cloud storage currently being used, relative to the total storage limit.
    - The bar is typically green, with the filled portion indicating the percentage of storage used.
        - The bar includes numerical data: "Usage: \[X] KB (\[Y]%)".
    - **Storage Limit:** Indicates the total cloud storage limit available to the account (e.g., "Limit: 10 MB (Free)").
    - **Clear All Storage Button**: A button that allows the user to clear all storage in the Cloud.
- **Important note**
    - A warning in a yellow frame: `Deleting your data from the cloud will also delete the corresponding local data. For example, if a chat is deleted from the cloud, it will be deleted from this device and any other devices with Cloud Sync enabled.`
- **Data type navigation**: With tab navigation bar such as `Files`, `Chats`, `Prompts`, `AI Agents`, `Plugins`
- **Data Display Area (Main Content Area):**
    - A list/table that displays all of data associated with selected data type.
    - Each object is represented by a row containing:
        - **Title:** The name of the item.
        - **Size:** The size of the data.
        - **Synched At:** Timestamp of the synchronization
        - **Action:**
            - **`Delete` Button:** Clicking this button will delete the data. A prompt window shows up for double confirmation, with content such as `Sure?`, `Click again to confirm`
- **Pagination Area**: Area for pagination, including total count of items
- **Close button:** To close the popup.

### Managing a Cloud Data Plan

1. **Access the Manage Dropdown Menu:** (As described above).
2. **Click `Manage Subscription`**: Click the `Storage Upgrade` to trigger a new popup window to upgrade the current plan.
3. **Select the Plans**: (1 GB or 5 GB)
4. **Checkout**: After selecting plan, the user will be navigated to the Stripe payment page to fill in payment.

### Manually Syncing Changes

- **Click the "Sync Changes" Button:** In the "Cloud Sync & Backup" settings dialog, click the "Sync Changes" button.
    - The button's label may change to "Syncing..." during the synchronization process.
    - A progress indicator (e.g., a loading spinner) may appear to indicate that synchronization is in progress.
    - Once the synchronization is complete, the "Last Sync" information is updated with the current date and time.

### Re-syncing Everything

- **Click the "Re-sync Everything" Link:** In the "Cloud Sync & Backup" settings dialog, click the "Re-sync Everything" link.
    - A confirmation prompt may appear, warning the user that local changes will be overwritten.
    - The link's label may change to "Syncing..." during the synchronization process.
    - A progress indicator may appear to indicate that synchronization is in progress.
    - Once the synchronization is complete, the "Last Sync" information is updated with the current date and time.

### Selective Sync

- **Expand the "Select What You Want to Sync" Section:** Click the dropdown.
- **Check or Uncheck Data Types:** Check the boxes next to data types that you want to sync, and uncheck the boxes next to data types that you want to exclude from synchronization.
    - The changes are applied immediately.

### Detailed Feature Information

- **Automatic Synchronization:** TypingMind automatically synchronizes data in the background at regular intervals. The frequency of automatic synchronization may depend on the subscription plan or application settings.
- **Data Encryption:** All data stored in the TypingMind Cloud is encrypted both in transit and at rest, ensuring data privacy and security.
- **Data Backup:** TypingMind automatically backs up data stored in the cloud, providing an additional layer of protection against data loss.

## Managing shared links

1. **Access the Manage Dropdown Menu:** (As described above).
2. **Click `Shared Links`**: Click the `Shared Links` to trigger a new popup window.

### Shared Links Popup Overview

The "Shared Links" dialog is structured to guide users through the process of managing shared links. It includes the following key sections:

- **Account Information:**
    - **Account Email:** Displays the email address associated with the TypingMind Cloud account.
- **Cloud Storage Information:**
    - **Storage Usage Bar:** A horizontal bar that visually represents the amount of cloud storage currently being used, relative to the total storage limit.
    - The bar is typically green, with the filled portion indicating the percentage of storage used.
        - The bar includes numerical data: "Usage: \[X] KB (\[Y]%)".
    - **Storage Limit:** Indicates the total cloud storage limit available to the account (e.g., "Limit: 10 MB (Free)").
- **List of shared chats:** List of shared chats in a table format. There are columns such as:
    - Link
    - Name
    - Created
    - Action
        - **`Delete` Button:** Clicking this button will delete the shared links. A prompt window shows up for double confirmation, with content such as `Sure?`, `Click again to confirm`
- **Close button:** To close the popup.

</CLOUD_SYNC_AND_BACKUP_FEATURES>

<PROJECT_FEATURE>
## Project Features

Projects in TypingMind provide a way to group related chats, assign default models and AI agents, and manage project-specific context and instructions.

### Creating a New Project/Folder

1. **Click the "Create Folder" Icon:** This icon (a folder with a "+" sign) is located to the right of the "Search chats" bar in the sidebar.
2. **Enter Project Name:** A text input field appears where you can type the name of the new project.
    - The text input is a single-line field with rounded corners.
    - The text color in the input field is white.
    - The background color is dark blue.
    - The field has a blinking cursor to indicate where the text will be inputted.
3. **Confirm Project Name:** After typing the name, press "Enter" on your keyboard.
4. **Project is Created:** A new folder with the specified name will appear in the chat list within the sidebar.

### Project Settings

Each project has associated settings that control the behavior of chats within that project.

1. **Accessing Project Settings:** Find the project folder in the sidebar and click on the "Project Settings" text located just below the folder name.
2. **Project Settings Dialog:** A dialog box appears with the following sections:
    - **Project Context & Instructions:**
        - A text area where you can enter instructions or context that will be appended to the system instructions for all chats within this project.
        - A descriptive text explains the purpose of this section: "This will be appended to the system instruction for all chats in this project. Note that this does not override, but "appended" on top of the global system instruction and agent-specific instructions."
        - The text area supports multi-line input.
        - The text area has a light-gray background.
        - The text color in the text area is black.
        - Example usage is provided: "E.g., Use ReactJS/TailwindCSS for all code output."
    - **Starting Model:**
        - A dropdown menu that allows you to select the default AI model to use when creating new chats within this project.
        - The description explains "The model to start new chats with. When you create a new chat within this project, it will start with this model. You can change to another model manually anytime."
        - The dropdown defaults to "Use Global Default."
        - Clicking the dropdown reveals a list of available models, including Ollama/Llava, DeepSeek, Liquid, Gemini, and custom models.
    - **Assigned AI agent:**
        - A dropdown menu that allows you to select a default AI agent to use when creating new chats within this project.
            - The description explains "If selected, new chats within this project will start with the selected AI agent. You can still change the AI agent for each individual chat if needed. Note: if the AI agent already has an assigned model, it will override the starting model setting"
        - The dropdown defaults to "No assigned AI agent."
        - Clicking the dropdown reveals a list of available AI agents.
    - **Project Documents:**
        - Allows you to upload documents that will be embedded directly into the system instructions for all chats in this project.
        - A "Select files" button opens a file dialog, allowing you to browse and select files from your local device.
            - The file dialog is the standard operating system file selection window.
            - A text label indicates how many characters and tokens the uploaded document contains.
    - **Dynamic Context:**
        - Allows you to create dynamic context with variables or retrieve data from an API and inject it into the system prompt using Retrieval-Augmented Generation (RAG).
        - Clicking the "+ Add Context" button adds a new dynamic context configuration section.
        - **Dynamic context configuration:**
            - **Context Name:** A text input field to define a name for the dynamic context (e.g., "Last 10 tweets").
            - **Context Source:** A dropdown menu to choose the source of the dynamic context data.
                - "Read from HTTP endpoint": Retrieves data from an API endpoint. Requires configuration of:
                    - HTTP Method (GET, POST, PUT, DELETE, PATCH).
                    - Endpoint URL.
                    - "Enable Cache" checkbox to cache the API response.
                    - "Add Request Headers" button will add a new input for the request headers with a delete button
                    - "Test Endpoint" button to test the API connection.
                - "Simple text prompt (with variables)": Allows you to define a simple text prompt with variables. Displays the text input field.
                    - "Available variables": Shows the list of available variables in the project such as {lastUserMessage} and {chatID}.
                    - A text input field to enter the prompt here
        - **"Collapse"** button: Will collapse the section.
        - **"Remove"** button: Will remove the dynamic context settings.
            - A confirmation prompt ("Sure?") appears to confirm the removal action. Clicking "Click again to confirm" will remove the context.
3. **Saving Changes:** After configuring the project settings, click the "Save" button (blue color with white text).
4. **Discarding Changes:** To revert the changes, user can click on the "Discard Changes" button.

### Adding a New Chat to a Project/Folder

1. **Click the "Add Chat" Icon:** Located to the right of the project folder's name in the sidebar (a "+" sign next to a speech bubble icon).
2. **New Chat is Created:** This action creates a new chat within the selected project. The new chat inherits the project's settings (system instructions, default model, and AI agent).

### Deleting a Project/Folder

1. **Click the "Delete" Icon:** Located to the right of the project folder's name in the sidebar (a trash can icon).
2. **Confirmation Prompt:** A confirmation prompt ("Click again to confirm") appears to prevent accidental deletion.
3. **Confirm Deletion:** Click the trash can icon again to permanently remove the project and all its associated chats.

### Editing a Project/Folder Name

1. **Click the "Edit" Icon:** Located to the right of the project folder's name in the sidebar (a pencil icon).
2. **Edit the name:** A text input field appears with current name for you to edit.
3. **Confirm Project Name:** After typing the name, press "Enter" on your keyboard.
4. **Project is Renamed:** The folder name will update

### Visual Cues

- **Project Settings Icons:** There are three small icons showing the project settings: `System Instruction`, `Upload Document` and `Dynamic Context`. User can hover to see the tooltips.
</PROJECT_FEATURE>
<GETTING_STARTED_FLOW>

## Getting Started Flow

This section outlines the process of setting up and using the licensed version of TypingMind.

### 1. Entering OpenAI API Key

- **Modal Window:** A modal window appears titled "Enter Your OpenAI API Key:".
    - **Title:** "Enter Your OpenAI API Key:"
        - The title is in a clear, bold font for easy readability.
        - A purple icon is located at the top.
    - **Description:** The modal provides information about the need for an OpenAI API key to use the app.
        - Text: "You need an OpenAI API Key to use the app."
        - Text: "Your API Key is stored locally on your browser and never sent anywhere else."
    - **Input Field:** A text input field is provided for the user to enter their OpenAI API key.
        - The input field has a light background for contrast against the text.
        - Placeholder text: "sk-*************************************"
        - Autocomplete may be enabled.
    - **"Get your API key from OpenAI dashboard." Link:** A hyperlink is provided to direct users to the OpenAI platform where they can obtain their API key.
        - This link opens the OpenAI website in a new tab.
    - **Save and Cancel Buttons:** Two buttons at the bottom allow the user to either save the entered API key or cancel the operation.
        - **"Save" Button:** A blue button with white text that saves the entered API key.
            - On click, the API key is stored locally, and the modal closes.
            - The button provides visual feedback upon being clicked.
        - **"Cancel" Button:** A button that cancels the API key entry process and closes the modal.
    - **"API Key not working? Click Here." Section:** An expandable section providing troubleshooting information.
        - Initial State: Collapsed, indicated by a right-facing arrow.
        - Text: "API Key not working? Click Here."
        - Expanding reveals troubleshooting steps.
            - "The app will connect to OpenAI server to check if your API Key is working properly."
    - **"FAQs about API Key" Section:** An expandable section linking to frequently asked questions about API keys.
        - Initial State: Collapsed, indicated by a right-facing arrow.
        - Text: "FAQs about API Key"
        - Expanding reveals a list of common questions and answers.
- **API Key Validation:** Upon clicking "Save", TypingMind attempts to connect to the OpenAI server to validate the provided API key.
- **Success:** A success notification or message is displayed if the API key is valid.
- **Error:** An error message is displayed if the API key is invalid or if the connection to the OpenAI server fails.
- **Confetti:** Confetti will show up if API key is valid.

### 2. Start Chatting

- **After valid API key:** "Awesome! You can start chatting now!" appear in the bottom of screen.
- **Type the message:** The user can start typing the message in the message input field.
- **Assistant response:** AI assistant will respond to the user

### 3. License Activation

- **Limitation:**
    - In the sidebar, a red banner shows up: `Chats are not saved in free trial. Please buy a license to unlock all features. Buy Here.`
    - This indicates some features is not available.
- **Trigger:** User can click on `Buy a license` button on top right corner.
- **Pricing modal will show up:**
    - **Header:** `Get A Lifetime License` with `Buy once, use forever!`
    - **3 options for user to choose**
        - `Standard`: $39
            - Feature: `Remove Ads/Popups`, `Basic Chat Features`, `Unlock AI Agents`, `Voice Input`, `Share Chats`
            - `Buy Standard` button to proceed
        - `Extended`: $79
            - Feature: `Image Generation`, `Web Search`, `Text-to-Speech`, `Vision / Images`, `Upload Documents`
            - `Buy Extended` button to proceed
        - `Premium`: $99 (Limited Time Offer)
            - Feature: `Unlimited Plugins`, `Project Folders`, `Artifacts`, `Canvas Editor`, `Free Updates`
            - `Buy Premium` button to proceed
    - Other options in pricing modal
        - `I already have a License Key` link: To trigger license key input.
        - `View Plan Comparison` link: To see more detailed comparison.
    - **Footer**:
        - `14-day money-back guarantee. All plans are one-time payments. Upgrade between plans anytime. Price does not include the API cost (Privacy Policy | Terms of Service)`
- **Checkout process:**
    - After click on `Buy Premium`, the Stripe checkout page will show up.
    - **Left side:**
        - `Devuap LLC (TypingMind)` on the top.
        - `Choose a currency` dropdown: User can select the currency, either VND or USD.
        - Detail of order will be shown such as: `Premium License`, `Subtotal`, `Add promotion code`, `Total due`
    - **Right side:**
        - Contact information: `Email`
        - Payment method: `Card information`, `MM/YY`, `CVC`, `Cardholder name`, `Country or region`
        - Other information: `Securely save my information for 1-click checkout`, agreement for term of service.
        - `Complete order` button on the bottom.
    - **Promotion code:** User can add promotion code
        - If the promotion code is invalid, an error will show.
        - If the promotion code is valid, the price will be updated with discount.
- **Thank you page:** User will be redirected back to TypingMind app after payment.
    - Popup: `Thank you for your purchase!`
        - Display: `The License Key and a Receipt has been sent to your email.`
        - Display your email
        - Display: `Your license is activated` with a checkmark.
        - `View license key` button to see the key.
        - `Get Started` button to continue.
    - Confetti: Confetti will show up if the license is activated.

### 4. Data Storage Choice

- **Popup:** `Choose how your data is stored`
- **2 options for user to choose:**
    - `Cloud Sync`: Store your data on the cloud and sync between devices
        - Recommended - 10MB Free
        - Information: `Automatic Backup/Sync: Your data is securely stored on TypingMind Cloud and automatically synced between devices.`, `Login with email: Easily login to your account on any device using your registered email address.`, `10MB free storage: You have 10MB of free storage. Upgrades are available for more storage. If you exceed this limit, you can still use the app but you won't be able to sync new data.`
        - To get started, user need to verify your email by inputing the email and press `Send Code` to receive the code.
        - User will be asked to enter the code here.
        - If don't see the email, user can click on `Alternative Login`.
    - `Local Only`: Only store your data on this device, no where else
        - Information: `Stored on device: Your data is stored only on this device, no one else can see your data. If you need to use TypingMind on another device you need to export/import manually.`, `Unlimited storage: You can store as much data as your device can handle. There is no limit set by the app.`, `Login with License Key: Use your license key to activate the app on a new device. If you lose your license key, recover it from your receipt email.`, `Data lost risk: If you lose your device or your browser cache/storage/cookies is cleared, you will lose all your data. Make sure to backup your data regularly using our export feature.`, `Here is your License Key. Please save this key in a safe place.`
        - User will be given the License Key, and need to check the agreement.
        - The agreement: `I understand that all of my data (chat messages, agents, prompts, etc.) will be lost if my browser cache or site data is cleared.`
        - To continue, user need to check the checkbox and click `Continue`.
- **Continue**: After selecting data storage choice, the user will be redirected back to the main interface.
- **Finish**: To finish the onboarding, user can press `Finish` button at the bottom of screen.

### 5. Post-Activation Interface Changes

- **No more red banner:** The red banner is no longer appear after license activation.
- **Icon change**: The app icon in the sidebar will show `B` indicator, stand for Basic License. This depends on the license plan.
- **Manage Cloud Sync**: User can click on the user profile icon and click on `Manage Cloud Sync` to manage the cloud sync settings.
</GETTING_STARTED_FLOW>

<TEAM_VS_PERSONAL>

## TypingMind for Teams vs. TypingMind for Individuals

TypingMind offers two main versions of its platform: one tailored for individual use and another designed for team collaboration. Here's a detailed comparison:

### 1. Core Functionality

- **TypingMind for Individuals:**
    - Focuses on providing a personal AI workspace.
    - Emphasizes individual productivity and customization.
    - Offers a range of features for managing AI chats, creating AI agents, and utilizing plugins.
- **TypingMind for Teams:**
    - Extends the individual features with team-oriented functionalities.
    - Enables team members to collaborate on AI-driven projects.
    - Provides tools for managing user access, setting usage limits, and customizing the AI experience for the entire team.

### 2. User Interface and Branding

- **TypingMind for Individuals:**
    - Features a clean and intuitive interface designed for single-user operation.
    - Allows for basic UI customization, such as theme selection and avatar personalization.
- **TypingMind for Teams:**
    - Offers advanced customization options, including:
        - Custom branding (logo, colors, tagline) to align with the organization's identity.
        - Customizable chat features (e.g., enabling/disabling specific functionalities).
        - Custom domain support to access the chat interface through the organization's own domain or subdomain.
        - Custom email templates for notifications and communications.

### 3. Collaboration Features

- **TypingMind for Individuals:**
    - Limited collaboration capabilities, primarily through chat sharing (exporting chats as text, JSON, HTML, or creating secret links).
- **TypingMind for Teams:**
    - Provides robust collaboration features, including:
        - Shared AI agents and prompts: Teams can create and share AI agents and prompt libraries, ensuring consistency and best practices across the organization.
        - Centralized knowledge base: Team members can contribute to a shared knowledge base that the AI can access, improving the accuracy and relevance of its responses.
        - Role-based access control: Administrators can assign roles and permissions to team members, controlling their access to features and data.
        - Usage limits: Set usage limits for AI agents, prompts, or specific AI models to manage costs and prevent overuse.

### 4. Data Management and Security

- **TypingMind for Individuals:**
    - Data is stored locally on the user's device by default, with optional cloud sync and backup.
- **TypingMind for Teams:**
    - Offers centralized data management and enhanced security features:
        - Secure deployment options: Deploy the platform on TypingMind's secure cloud infrastructure or self-host it on your own servers.
        - Regional data storage: Select data centers located in the US or EU to comply with data residency requirements.
        - Granular access controls: Use roles and tags to securely manage team members' permissions.
        - Single Sign-On (SSO): Reduce the risk of password-related security breaches by enabling SSO.
        - GDPR and HIPAA compliance: Ensure compliance with data privacy regulations.

### 5. Management and Analytics

- **TypingMind for Individuals:**
    - Limited management and analytics capabilities.
- **TypingMind for Teams:**
    - Provides comprehensive management and analytics tools:
        - User access management: Invite users, manage their roles, and track their activity.
        - Usage analytics: Gain insights into how the team is using the platform, including which AI agents and models are most popular.
        - Chat history and reporting: Access detailed chat history and generate reports for auditing and analysis.

### 6. Integration and Extensibility

- **TypingMind for Individuals:**
    - Supports a range of plugins to extend functionality.
- **TypingMind for Teams:**
    - Offers advanced integration and extensibility options:
        - API access: Integrate TypingMind with other internal systems and workflows.
        - Custom plugins: Build custom plugins tailored to the organization's specific needs.
        - Webhooks: Receive real-time notifications about events within the platform.
        - Embed as chat widget: Embed the chat interface into your website, blog, or CMS.

### 7. Pricing and Licensing

- **TypingMind for Individuals:**
    - Offers a lifetime license with different tiers based on features.
- **TypingMind for Teams:**
    - Typically offers subscription-based pricing, with costs depending on the number of users and features required.
    - May offer custom pricing plans for large organizations.

### 8. Target Audience

- **TypingMind for Individuals:**
    - AI enthusiasts, developers, researchers, content creators, and individual business professionals.
- **TypingMind for Teams:**
    - Businesses, organizations, and teams of all sizes that want to leverage AI for collaboration, knowledge sharing, and improved productivity.
    - Ideal for companies looking to build internal AI platforms or integrate AI into their existing workflows.

</TEAM_VS_PERSONAL>

<ADD_CUSTOM_MODEL_FEATURE>

## Add Custom Model Feature

The "Add Custom Model" feature in TypingMind allows users to integrate their own custom-built or fine-tuned Large Language Models (LLMs) into the platform, expanding the range of AI models they can access and utilize. This feature supports various API types, enabling compatibility with a wide array of custom models.

### Accessing the "Add Custom Model" Dialog

1. **Navigate to the "Models" Section:** In the left sidebar, click on the "Models" icon. This will open the Model Management interface.
2. **Click the "+ Add Custom Model" Button:** Located at the top-right corner of the Model Management interface, this button initiates the process of adding a new custom model. Clicking it opens the "Add Custom Model" dialog.

### "Add Custom Model" Dialog Overview

The "Add Custom Model" dialog is structured to guide users through the configuration process. It includes the following key sections:

- **Create Manually / Import Options:** Radio buttons to select the method for defining the custom model.
    - **Create Manually:** Allows users to manually enter all the model's configuration details through a form.
    - **Import JSON:** Enables users to import model settings from a JSON file.
    - **Import Open Router:** Allows users to import model configuration from Open Router.
- **Custom Model Guides:** A sidebar on the right provides links to guides and documentation for setting up various custom models, including Mistral AI, Open Router models, Perplexity AI, Azure OpenAI, LocalAI, and Ollama.

### 1. Create Manually Option

When "Create Manually" is selected, the dialog displays the following input fields and settings:

- **Name:**
    - **Purpose:** Assign a descriptive name to the custom model for easy identification within TypingMind.
    - **Input Type:** Text field.
    - **Placeholder Text:** "e.g., GPT4All"
    - **Requirement:** Mandatory. The model cannot be added without a name.
- **API Type:**
    - **Purpose:** Specify the API type that the custom model is compatible with.
    - **Input Type:** Dropdown menu.
    - **Options:**
        - "OpenAI Compatible API": For models that adhere to the OpenAI API standard.
        - More options might appear in the future to support other API standards.
    - **Requirement:** Mandatory.
- **Icon URL (Optional):**
    - **Purpose:** Provide a URL to an image that will be used as the icon for the custom model within TypingMind.
    - **Input Type:** Text field.
    - **Requirement:** Optional. If left blank, a default icon will be used.
    - **Recommendation:** Use a direct link to an image file (e.g., PNG, JPG) for best results.
- **Endpoint:**
    - **Purpose:** Enter the API endpoint URL for the custom model. This is the address where TypingMind will send requests to the model.
    - **Input Type:** Text field.
    - **Requirement:** Mandatory. The model cannot be added without a valid endpoint URL.
    - **Note:** The endpoint URL must be compatible with the selected API Type. For OpenAI Compatible APIs, the endpoint must be compatible with `/v1/chat/completions`.
- **Model ID:**
    - **Purpose:** Specify the model identifier as recognized by the API. This might be the model's name or a unique ID.
    - **Input Type:** Text field.
    - **Placeholder Text:** "e.g., gpt4all-j-v1.3-groovy.bin"
    - **Requirement:** Mandatory.
- **Context Length:**
    - **Purpose:** Define the maximum context length (in tokens) that the custom model supports. This determines how much of the conversation history the model can consider when generating responses.
    - **Input Type:** Number field.
    - **Default Value:** 2048
    - **Requirement:** Mandatory.
    - **Impact:** Setting the context length accurately is crucial for managing token usage and ensuring the model performs optimally.
- **Price for Cost Estimation (Optional):**
    - **Purpose:** Allows users to input the cost per 1 million input tokens and the cost per 1 million output tokens for the model. This information is used to estimate the cost of using the model, helping users manage their API expenses.
    - **Input Type:** Number fields with a currency symbol ($).
    - **Default Value:** $0.00 for both input and output tokens.
    - **Requirement:** Optional. If left blank, cost estimation will not be available for this model.
- **Support Plugins (via OpenAI Functions):**
    - **Purpose:** Enables support for plugins (also known as tools or functions) within the custom model.
    - **Input Type:** Toggle switch.
    - **Functionality:** When enabled, TypingMind will send the "functions" or "tool_calls" parameter to the model, allowing it to utilize plugins.
    - **Requirement:** Optional. Only enable if the custom model supports the OpenAI Functions API.
- **Support OpenAI Vision:**
    - **Purpose:** Enables support for processing image inputs with the custom model.
    - **Input Type:** Toggle switch.
    - **Functionality:** When enabled, TypingMind will allow image uploads and send the image data to the custom model for processing (if the model supports it).
    - **Requirement:** Optional. Only enable if the custom model supports image input.
- **Support System Role:**
    - **Purpose:** Enables the use of system role messages in the chat conversation with the custom model.
    - **Input Type:** Toggle switch.
    - **Functionality:** When enabled, TypingMind will include system role messages when communicating with the custom model.
    - **Requirement:** Enabled by default.
- **Support Streaming Output:**
    - **Purpose:** Enables real-time streaming of the model's responses.
    - **Input Type:** Toggle switch.
    - **Functionality:** When enabled, TypingMind will receive the model's responses in chunks, displaying them to the user as they are generated. This provides a more interactive and responsive experience.
    - **Requirement:** Enabled by default.
- **Custom Headers:**
    - **Purpose:** Allows users to add custom HTTP headers to the requests sent to the custom model's API endpoint. This is useful for providing authentication tokens, API keys, or other custom information required by the API.
    - **Functionality:**
        - Clicking the "+ Add Custom Headers" link adds a new row with two input fields: "Header Key" and "Header Value".
        - "Header Key": Input the name of the HTTP header (e.g., "Authorization", "X-API-Key").
        - "Header Value": Input the value of the HTTP header (e.g., "Bearer <token>", "your_api_key").
        - A "Remove" button allows you to delete the header.
- **Custom Body Params:**
    - **Purpose:** Allows users to add custom parameters to the body of the requests sent to the custom model's API endpoint. This is useful for including additional data or instructions with the request.
    - **Functionality:**
        - Clicking the "+ Add Custom Body Params" link adds a new row with three input fields: "Type", "Key", and "Value".
        - **Type:** A dropdown menu to select the data type of the parameter (string, number, boolean, object).
        - **Key:** Input the name of the parameter.
        - **Value:** Input the value of the parameter.
        - A "Remove" button allows you to delete the parameter.
- **Test Button:**
    - **Purpose:** Sends a test request to the custom model's API endpoint to verify that the configuration is correct and the model is accessible.
    - **Functionality:**
        - Clicking the "Test" button initiates the test request.
        - A success message is displayed if the test is successful ("Nice, the endpoint is working! ✨").
        - An error message is displayed if the test fails, indicating potential configuration issues.
- **Add Model Button:**
    - **Purpose:** Saves the custom model configuration and adds it to the list of available models in TypingMind.
    - **Functionality:**
        - Clicking the "Add Model" button saves the configuration.
        - The "Add Custom Model" dialog closes.
        - The new custom model appears in the list of available models in the Model Management interface.
- **Cancel Button:**
    - **Purpose:** Cancels the process of adding a custom model and closes the dialog without saving any changes.

### 2. Import JSON Option

Allows the user to import custom model configurations via JSON.

### 3. Import Open Router Option

Allows the user to import custom model configurations from Open Router.

### Editing a Custom Model

1. **Access the Model Management Interface:** (As described above).
2. **Locate the Custom Model:** Find the custom model in the list of available models.
3. **Click the "Edit" Icon:** Click the "Edit" icon (pencil icon) associated with the custom model. This will open the "Update Custom Model" dialog, which is similar to the "Add Custom Model" dialog.
4. **Modify the Settings:** Make the desired changes to the model's configuration settings.
5. **Test the Configuration (Optional):** Click the "Test" button to verify the updated configuration.
6. **Update Model Button:** Click the "Update Model" button to save the changes.

### Important Considerations

- **API Compatibility:** Ensure that the custom model's API is compatible with the selected API Type in TypingMind.
- **Endpoint URL:** Double-check the endpoint URL to ensure it is correct and accessible.
- **Context Length:** Set the context length appropriately to optimize performance and manage token usage.
- **Security:** If the API requires authentication, provide the necessary credentials through custom headers or body parameters.
- **Testing:** Always test the custom model configuration before saving it to ensure that it is working correctly.

### Add Custom Model: Deep Dive for Pro Users

This section delves into the technical aspects of the "Add Custom Model" feature, providing insights for advanced users who want to understand how TypingMind interacts with their custom models and how to troubleshoot potential issues.

### How TypingMind Communicates with Custom Models

- **Direct Client-Side Communication:** TypingMind establishes a *direct* connection from the user's browser (client-side) to the API endpoint of your custom model. This means that:
    - **Data Privacy:** Your data (prompts, conversation history) is sent directly to *your* model's endpoint and doesn't pass through TypingMind's servers (unless you are using cloud sync).
    - **Latency:** The latency is dependent on the network connection between the user's browser and your model's server. TypingMind adds minimal overhead to this communication.
    - **Security:** TypingMind relies on your custom model's API endpoint to handle security and authentication. Ensure your endpoint is properly secured with HTTPS and appropriate authentication mechanisms.
- **`v1/chat/completions` API Compliance:** For "OpenAI Compatible API" models, TypingMind expects the custom model to adhere to OpenAI's `v1/chat/completions` API specification. This includes:
    - **Request Structure:** TypingMind sends requests with a structure that matches OpenAI's API, including parameters like `messages` (an array of conversation turns with `role` and `content`), `temperature`, `top_p`, `n`, `stream`, etc.
    - **Response Format:** TypingMind expects responses to be in the format defined by OpenAI's API, typically a JSON object containing a `choices` array with the model's generated `text`.
    - **Streaming:** If `Support Streaming Output` is enabled, TypingMind expects the API to send Server-Sent Events (SSE) with the `data` field containing JSON chunks of the response.
- **Custom Headers & Body Parameters:** These features allow you to tailor the requests sent to your custom model's API:
    - **Headers:** Useful for authentication (e.g., `Authorization: Bearer <token>`, `X-API-Key: your_api_key`), content type specification (`Content-Type: application/json`), or custom tracking.
    - **Body Parameters:** Useful for passing additional data or instructions to your model that are not part of the standard OpenAI API.

### Common Questions & Troubleshooting Guide

**Q: My custom model is not working. What should I do?**

1. **Verify the Endpoint URL:** Double-check that the endpoint URL is correct and that the API is running and accessible. Use tools like `curl` or `Postman` to test the endpoint directly.
2. **Check the API Type:** Ensure that you have selected the correct API Type ("OpenAI Compatible API" for OpenAI-like models).
3. **Review Custom Headers & Body Parameters:** Make sure that any custom headers or body parameters are correctly configured. Typos or incorrect values can cause API requests to fail.
4. **Inspect the Request/Response:** Use your browser's developer tools (Network tab) to inspect the actual requests being sent to your custom model and the responses being returned. Look for any error messages or unexpected data.
5. **Examine the Model's Logs:** Check your custom model's logs for any errors or exceptions that might be occurring. This can provide valuable insights into what's going wrong.
6. **Confirm API Compliance:** For "OpenAI Compatible API" models, make sure that your API adheres to the OpenAI `v1/chat/completions` API specification.
7. **Context Length:** If your model is cutting off responses, ensure that the context length is set appropriately.
8. **Rate Limiting:** Check if your custom model has rate limiting enabled. If so, TypingMind might be exceeding the limits.

**Q: How can I troubleshoot authentication issues?**

1. **Verify API Keys/Tokens:** Double-check that your API keys or authentication tokens are correct and have the necessary permissions.
2. **Inspect Headers:** Use browser developer tools to confirm that the `Authorization` header or other authentication-related headers are being sent correctly with the request.
3. **Check Server Logs:** Review your custom model's server logs for any authentication errors.

**Q: The streamed responses are garbled or incomplete. What could be the issue?**

1. **SSE Compliance:** Ensure that your API is sending valid Server-Sent Events (SSE) with the `data` field containing JSON chunks of the response.
2. **Encoding:** Make sure that the responses are properly encoded (e.g., UTF-8).
3. **Buffering:** Check if your API is buffering the output before sending it. This can cause delays and incomplete responses.
4. **Network Issues:** Investigate potential network issues that might be interrupting the stream.

**Q: How can I estimate the cost of using my custom model?**

1. **Token Usage:** Accurately estimate the number of input and output tokens used per conversation.
2. **Pricing Information:** Obtain the cost per 1 million input tokens and the cost per 1 million output tokens from your custom model provider.
3. **Manual Calculation:** Multiply the number of tokens by the cost per token to estimate the total cost.
4. **TypingMind Integration:** Enter the price information into the "Price for Cost Estimation" fields in TypingMind. This will allow TypingMind to provide cost estimates within the chat interface.

**Q: My model supports OpenAI Functions (plugins). How do I enable them in TypingMind?**

1. **Enable the Toggle:** Set the "Support Plugins (via OpenAI Functions)" toggle to "On" when adding or editing the model.
2. **Function Schema:** Ensure that your model's API is able to interpret the "functions" or "tool_calls" parameter in the request and that it returns the correct function call information in the response.
3. **Plugin Configuration:** Configure the plugins you want to use in TypingMind's plugin management interface.

By understanding these technical details and troubleshooting tips, you can effectively integrate and utilize your custom models within TypingMind, unlocking the full potential of your AI creations.

</ADD_CUSTOM_MODEL_FEATURE>

<MODEL_PARAMETERS_SETTINGS>
## Model Parameters Settings

TypingMind allows for granular control over the behavior of AI models, allowing users to adjust various parameters that influence the model's output and performance. These settings can be accessed and modified on a per-model basis, giving users the flexibility to fine-tune each model to their specific needs.

### Accessing Model Parameter Settings

There are two ways to access the model parameters settings:

#### 1. Via "Change Chat Parameters"
1. **Open a Chat:** Start or open an existing chat.
2. **Access the Model Selection Dropdown:** In the chat interface, locate the dropdown menu that displays the currently selected AI model (e.g., "Claude 3.5 Sonnet").
3. **Click "Change Chat Parameters":** At the bottom of the model list, there is a "Change Chat Parameters" option. Click on this to open the `Model Settings` dialog.
4. **Find the Model:** Find the model you want to change the settings.
5. **Click the "Settings" Icon:** Next to each custom model there is an edit icon (looks like a pencil). Click on it will bring up the parameters for the model.

#### 2. Via Models Tab
1. **Navigate to the "Models" Section:** In the left sidebar, click on the "Models" icon. This will open the Model Management interface.
2. **Find the Model:** Locate the AI model you want to configure in the list of available models. Models are displayed with their name, icon, and a toggle switch to enable/disable them.
3. **Select the Model:** Click on the model's name or icon to select it. This will display the model's overview and parameters.
4. **Navigate to "Parameters" Tab**: Click on the "Parameters" tab to view and adjust the model's parameters.

### Model Settings Dialog Overview

- **Title:** "Model Settings"
    - Displayed at the top of the dialog.
- **Information Text:** "Changes are saved only for the current chat"
    - A yellow text is displayed indicating changes are saved for the current chat only.
- **Search Models:** A search box to search for the models.
- **Model List:** The main section displays a list of available AI models.
    - **Model Name:** The name of the AI model.
    - **Settings Icon**: To the right of each model, there is an icon to change the settings.
    - **Trash Icon**: To the right of each model, there is an icon to delete the model.
- **Model Selection:**
    - The currently selected AI model is highlighted or visually indicated.
    - The model name and a descriptive label (e.g., "GPT-4", "Claude 3.5 Sonnet") are displayed.
    - A dropdown menu or similar control allows you to switch to a different AI model.
- **"+ Add Custom Model" Button:** Allows you to add the custom model.
- **Cancel Button:** A cancel button on the bottom right corner to cancel the action.

### Parameters Tab
The "Parameters" tab allows you to adjust the model settings.
- **Override Global Model Parameters:**
    - Function: Allows users to override the global model parameters defined in the Global Settings.
    - Input Type: Toggle switch.
    - Functionality: When enabled, the following parameters can be modified specifically for the selected model.
    - Requirement: Optional. If disabled, the model will use the global parameters defined in the Global Settings.

### Model Parameters List

The following parameters can be adjusted when "Override Global Model Parameters" is enabled:

- **Context Limit:**
    - **Description:** The number of messages to include in the context for the AI assistant. When set to 1, the AI assistant will only see and remember the most recent message.
    - **Default Value:** All
    - **Functionality:** A dropdown menu to select the number of messages to include in the context.
        - All Previous Messages
        - Last 1 message
        - Last 2 messages
        - Last 3 messages
        - ...
        - Last 30 messages
        - Last 31 messages
        - Last 32 messages
    - **Note:** Adjusting the context limit can impact the AI's ability to understand the conversation history.
- **Temperature:**
    - **Description:** Higher values (e.g., 0.8) will make the output more random, while lower values (e.g., 0.2) will make it more focused and deterministic.
    - **Default Value:** 1
    - **Functionality:** A slider to adjust the temperature.
    - **Range:** 0 to 2
    - **Reset to default** link: Reset the settings.
    - **Visual Cue:** A visual representation of where the current temperature falls on the scale between "Precise" and "Creative."
- **Presence Penalty:**
    - **Description:** How much to penalize new tokens based on whether they appear in the text so far. Increases the model's likelihood to talk about new topics.
    - **Default Value:** 0
    - **Functionality:** A slider to adjust the presence penalty.
    - **Range:** -2 to 2
    - **Reset to default** link: Reset the settings.
    - **Visual Cue:** A visual representation of where the current presence penalty falls on the scale between "Balanced" and "Open-minded."
- **Frequency Penalty:**
    - **Description:** How much to penalize new tokens based on their existing frequency in the text so far. Decreases the model's likelihood to repeat the same line verbatim.
    - **Default Value:** 0
    - **Functionality:** A slider to adjust the frequency penalty.
    - **Range:** -2 to 2
    - **Reset to default** link: Reset the settings.
    - **Visual Cue:** A visual representation of where the current frequency penalty falls on the scale between "Balanced" and "Less Repetition."
- **Top P:**
    - **Description:** An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
    - **Default Value:** 1
    - **Functionality:** A slider to adjust the top P.
    - **Range:** 0 to 1
     - **Reset to default** link: Reset the settings.
    - **Visual Cue:** A visual representation of where the current top P falls on the scale between "Precise" and "Creative."
- **Top K:**
    - **Description:** Only sample from the top K options for each subsequent token. Used to remove "long tail" low probability responses. Min: 0
    - **Default Value:** 0
    - **Functionality:** A numeric input to adjust the top K.
    - **Range:** 0 to 40
     - **Reset to default** link: Reset the settings.
    - **Note:** Setting Top K to 0 will disable it
- **Max Tokens:**
    - **Description:** The maximum number of tokens to generate before stopping.
    - **Default Value:** 4000
    - **Functionality:** A numeric input to adjust the max tokens.
    - **Range:** 0 to 4000
     - **Reset to default** link: Reset the settings.
- **Safety Settings (Gemini Only):**
    - **Description:** Content is blocked based on the probability that it is harmful.
    - **Default Value:** DEFAULT
    - **Functionality:** A section to adjust the safety settings of the Gemini model.
    - **Individual Settings:**
        - **Harassment:** Block none, few, some, most.
            - Functionality: A slider to adjust the harassment level.
        - **Hate speech:** Block none, few, some, most.
            - Functionality: A slider to adjust the hate speech level.
        - **Sexually explicit:** Block none, few, some, most.
            - Functionality: A slider to adjust the sexually explicit level.
        - **Dangerous:** Block none, few, some, most.
            - Functionality: A slider to adjust the dangerous level.
        - **Civic integrity:** Block none, few, some, most.
            - Functionality: A slider to adjust the civic integrity level.
     - **Reset to default** link: Reset the settings.
- **Prompt Caching:**
    - **Description:** Prompt caching helps save token costs for long conversations. Enabling this will incur additional tokens when initiating the cache for the first time, but it can save many more tokens later, especially for long conversations. Not all models support caching, and some models require a minimum number of tokens for caching to be initiated. Please check with your AI model provider for more information.
    - **Functionality:** A toggle to enable or disable prompt caching.
- **Reasoning Effort (Reasoning models only):**
    - **Description:** Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
    - **Default Value:** DEFAULT
    - **Functionality:** A dropdown menu to select the reasoning effort.
        - Low
        - Medium
        - High
     - **Reset to default** link: Reset the settings.

### Applying Changes

- **Apply for current chat Button:**
    - After adjusting the parameters, click the "Apply for current chat" button to apply the changes to the current chat session.
- **Cancel Button:**
    - Discards the changes.

### Dynamic Context (Advanced users)

- **Purpose:** Enables users to inject dynamic data from external APIs or data sources into the AI's context, providing real-time information and enhancing the relevance of the AI's responses.
- **Functionality:**
    - **"+ Add Context" Button:** Clicking this button adds a new dynamic context configuration section.
    - **Context Name:**
        - A text input field to define a descriptive name for the dynamic context (e.g., "Live Weather Data", "Stock Prices").
        - The name helps identify the context within the chat interface and when configuring prompts.
    - **Context Source:** A dropdown menu to choose the source of the dynamic context data.

### Context Source Options:

1. **Read from HTTP Endpoint (API Integration):**
    - Allows users to fetch data from an external API endpoint.
    - Configuration Options:
        - **HTTP Method:** A dropdown menu to select the HTTP method for the API request (GET, POST, PUT, DELETE, PATCH). The default method is GET.
        - **Endpoint URL:** A text input field to enter the URL of the API endpoint.
        - **Enable Cache Checkbox:** A checkbox to enable caching of the API response.
            - When checked, the API response will be stored for a specified duration, reducing the number of API calls and improving performance.
            - The cache duration can be configured in the settings.
        - **Request Headers:** A section to add custom HTTP request headers.
            - "+ Add Request Headers" Button: Clicking this button adds a new row with two input fields: "Header Key" and "Header Value".
            - "Header Key": Input the name of the HTTP header (e.g., "Authorization", "Content-Type").
            - "Header Value": Input the value of the HTTP header (e.g., "Bearer <token>", "application/json").
            - A "Delete" button allows you to remove the header.
        - **Test Endpoint Button:** Clicking this button sends a test request to the configured API endpoint and displays the response.
            - This allows users to verify that the API endpoint is accessible and that the data is being retrieved correctly.
2. **Simple Text Prompt (with variables):**
    - Enables users to define a simple text prompt with variables that will be dynamically replaced with data.
    - Configuration Options:
        - **Available Variables:** A display showing the list of available variables in the project, such as `{lastUserMessage}` (the last message sent by the user) and `{chatID}` (the unique identifier of the current chat).
        - **Text Input Field:** A multi-line text input field where users can enter the prompt text, including the variables.

### Additional Controls:

- **"Collapse" Button:** Collapses the dynamic context configuration section, hiding the settings.
- **"Remove" Button:** Removes the dynamic context configuration section.
    - A confirmation prompt ("Sure?") appears to prevent accidental deletion.
    - Clicking "Click again to confirm" permanently removes the dynamic context.
- **Saving Changes:** After configuring the dynamic context, click the "Save" button to save the settings.
- **Using Dynamic Context in Prompts:**
    - Once configured, dynamic context can be used in prompts by referencing the context name within curly braces (e.g., `{{Live Weather Data}}`).
    - When the AI processes the prompt, TypingMind will automatically replace the context name with the corresponding data from the API or variable.

</MODEL_PARAMETERS_SETTINGS>

<AI_AGENTS_FEATURES>
## AI Agents Features

TypingMind's AI Agents feature allows users to create, customize, and manage specialized AI assistants tailored for specific tasks or domains. AI Agents can be configured with unique instructions, knowledge sources, skills (plugins), and even distinct voices, enabling them to function as highly personalized and efficient collaborators.

### Accessing the AI Agents Interface

1. **Locate the "Agents" Icon:** In the left sidebar, find the icon that represents AI Agents. The icon typically depicts a stylized human head or figure.
2. **Click the "Agents" Icon:** Clicking this icon navigates you to the main AI Agents management interface.

### AI Agents Interface Overview

The AI Agents interface is organized to provide an intuitive overview of available agents and facilitate easy creation and management. The interface generally consists of the following elements:

- **Page Title:** Displays the title "Agents," clearly indicating the purpose of the page.
- **Page Description:** A concise description of the AI Agents feature is provided below the title, such as "Agents are pre-built AI assistants for specific tasks."
- **Search Bar:** A text input field labeled "Search AI agents..." allowing users to quickly find specific agents by name or keyword.
    - The search bar includes a magnifying glass icon.
    - As the user types, the list of displayed agents is dynamically filtered to match the search query.
    - The search considers agent names, descriptions, and categories.
- **"Create AI Agent" Button:** A prominent button that initiates the process of creating a new AI Agent.
    - The button is typically green or blue to visually distinguish it as a primary action.
    - The button's label clearly indicates its function: "Create AI Agent."
    - Clicking this button opens the "New AI Agent" creation form.
- **"Browse Agents" Button:** A blue button will be displayed. It will open another popup page to show off the AI agents in TypingMind's marketplace
    - The button's label clearly indicates its function: "Browse Agents."
    - The default selection of sorting algorithm is the default algorithm
    - User can sort the AI agents with "Most Popular" and "Trending" algorithm
- **Category Navigation (Left Sidebar):** A vertical list of categories is located on the left side of the interface, allowing users to filter and browse agents by category.
    - Common categories may include "Uncategorized," "Lifestyle and Wellness," "Tech," "Design," "Marketing," "Legal," and "Sales."
    - Clicking a category filters the list of displayed agents to show only those belonging to the selected category.
- **Agent Display Area (Main Content Area):** The main content area displays a grid or list of available AI Agents.
    - Each agent is represented by a card or tile containing:
        - **Icon/Avatar:** An icon or image representing the AI Agent.
        - **Name:** The name of the AI Agent.
        - **Description:** A brief description of the AI Agent's purpose or capabilities.
        - **Action Buttons:** A set of buttons or icons providing quick access to common actions:
            - **"Chat now" Button:** Initiates a new chat session with the selected AI Agent.
            - **"Edit" Icon:** Opens the AI Agent's configuration settings for modification.
            - **"Share" Icon:** Show the sharing model with two options: `Share to Secret Link` and `Share to TypingMind`.
            - **"Copy" Icon:** Show the options to copy `System Instruction`.
            - **"Delete" Icon:** Deletes the AI Agent (with confirmation).
- **View Layout Toggle:** Two icons ("Grid" and "List") allow the user to switch between grid and list views for displaying AI Agents.
    - The selected layout is visually indicated (e.g., highlighted icon).
- **Sort Order Dropdown:** A dropdown menu labeled "Last Created" (or similar) allows users to sort the agents based on different criteria.
    - Common sorting options include "Title," "Last Used," and "Last Created."
    - The currently selected sorting option is displayed in the dropdown label.

### Creating a New AI Agent

1. **Click the "Create AI Agent" Button:** In the main AI Agents interface, click the "Create AI Agent" button. This will open the "New AI Agent" creation form.
2. **New AI Agent Form Overview:** The "New AI Agent" form is structured to guide users through the configuration of a new AI Agent. It includes the following key sections:

### General Information Section

- **Name:**
    - **Purpose:** Assign a name to the AI Agent. This name will be used to identify the agent in the AI Agents interface and when mentioning the agent in chats (using the @ symbol).
    - **Input Type:** Text field.
    - **Placeholder Text:** "E.g., Life Coach"
    - **Requirement:** Mandatory. The agent cannot be saved without a name.
- **Description:**
    - **Purpose:** Provide a brief description of the AI Agent's purpose or capabilities. This description is for the user's information and is displayed in the AI Agents interface.
    - **Input Type:** Text area (multi-line text field).
    - **Example Text:** "E.g., A life coach who can help you set and achieve personal and professional goals."
    - **Requirement:** Optional, but highly recommended.
    - **"Auto fill" Button:** Automatically generate the agent's description.
- **Categories (Optional):**
    - **Purpose:** Assign the AI Agent to one or more categories to help organize and filter agents in the AI Agents interface.
    - **Input Type:** Text field with auto-suggest or dropdown.
    - **Functionality:**
        - The user can type in the field to create a new category.
        - A list of existing categories is displayed, allowing the user to select from pre-defined options.
        - The user can assign the AI Agent to multiple categories.
    - **Requirement:** Optional.
- **Profile Picture:**
    - **Purpose:** Provide a URL to an image that will be used as the icon for the AI Agent.
    - **Input Type:** Text field.
    - **Placeholder Text:** "https://"
    - **Requirement:** Optional. If left blank, a default icon will be used.
    - **Recommendation:** Use a direct link to an image file (e.g., PNG, JPG) for best results.
- **System Instruction:**
    - **Purpose:** Define the system instructions that will be used to guide the AI Agent's behavior. These instructions provide the AI with context, goals, and constraints for generating responses.
    - **Input Type:** Text area (multi-line text field).
    - **Example Text:** "E.g., You are a life coach, you help the user identify and achieve their goals, motivate them, and provide support and encouragement."
    - **Requirement:** Mandatory. The agent cannot be saved without system instructions.
    - **"Auto fill" Button:** Automatically generate the system instruction.
    - **Character and Token Count:** A display shows the character count and tokens count of the text area content. The character count is on the left and the tokens count is on the right.
- **Override system instructions**
    - Function: Allows users to replace app default system instruction with the System Instruction defined.
    - Input Type: Toggle switch.
    - By default, the AI agent's instruction will be appended to the app's default system instruction (set in the model settings popup). Check this box if you want to skip the previous system instruction for this AI agent.

### Base Model Section

- **Model & parameters:**
    - **Functionality:** Allow user to define the base model of this AI Agent.
- **Assign a specific model to this AI agent**
    - Function: Allows users to assign a specified model to the AI Agent.
    - Input Type: Toggle switch.
    - Functionality: When enabled, the AI Agent will always use the selected model and users cannot change it.
    - Requirement: Optional. If disabled, the model to use will be decided by the user.
    - **Model dropdown**: User can select a model from the dropdown.
- **Assign custom model parameters for this AI agent**
    - Function: Allows users to assign custom model parameters for the AI Agent.
    - Input Type: Toggle switch.
    - Functionality: When enabled, the AI Agent will use the custom model parameters.
    - Requirement: Optional. If disabled, the model parameters will be decided by the user or global settings.
    - All Model Parameters settings will be displayed as described above.

### Skills Section

- **Plugins:**
    - Functionality: Allow user to define the plugins of this AI Agent.
- **Assign plugins for this AI agent**
    - Function: Allows users to assign specified plugins to the AI Agent.
    - Input Type: Toggle switch.
    - Functionality: When enabled, the AI Agent will always use the selected plugins and users cannot change it.
    - Requirement: Optional. If disabled, the plugins to use will be decided by the user.
    - Plugin Settings: All Plugin settings will be displayed as described above.

### Text-to-speech Section

- **Assign text-to-speech settings for this AI agent**
    - Function: Allows users to assign specified text-to-speech settings to the AI Agent.
    - Input Type: Toggle switch.
    - Functionality: When enabled, the AI Agent will always use the selected text-to-speech settings and users cannot change it.
    - Requirement: Optional. If disabled, the text-to-speech settings will be decided by the user.
    - Speech API: The API provider used to generate the speech. Options: `ElevenLabs (Beta)`
        - Voice: The selected voice.
        - Advanced Options: Includes `Model` with options `eleven_monolingual_v1` and `eleven_multilingual_v1`, and `Stability`, `Similarity Enhance`.
    - Test Audio: A textbox that includes the `Play` button, and the test audio script: `Hello, this is the test audio for the AI assistant`.
    - Auto play assistant messages: When enabled, the AI agent will automatically play assistant messages.

### Knowledge Section

- **Training files:**
    - Functionality: Allow user to upload training files.
    - Upload documents to help the AI agent understand your domain knowledge better. The documents will be included directly to the model's system instruction.
    - User can click on "Select files" to select training files.
    - A list of uploaded files is displayed.
    - User can see the characters count and tokens count of the selected files.
- **Dynamic context:**
    - Refer to the Model Parameters Settings described above.

### Chat Experience Section

- **Few-shot prompting**
    - Description: Few-shot prompting is a technique to help the AI agent learn how to respond to users in a specific way by providing demonstrations in the prompt to steer the model toward better performance. The prompts will be automatically inserted at the beginning of every conversation, right after the system instructions (but not included in the system instruction). This is useful when you want the AI to always respond in a very specific format.
    - Add New Prompt button: Click this button to add a new prompt with User Message and Assistant Response text area. User message is the sample user's message to the AI agent, while Assistant Response is the agent's correct response to the user.
    - User Message
    - Assistant Response
    - Remove button: Remove the current user message and assistant response.
- **Welcome message:**
    - Functionality: Allow user to define welcome message.
    - The first message to send to the user when start a new chat.
- **Conversation starters:**
    - Functionality: Allow user to define conversation starters, so the user can quickly select the prompts.
    - Suggest some first messages for the user to select from in the beginning of the conversation.
    - Add Conversation Starters: Click this button to add a conversation starter
        - A text input field for new conversation starter.

### Saving or Canceling the New AI Agent

1. **Click the "Save" Button:** After configuring all desired settings, click the "Save" button (typically located in the top-right corner of the form) to save the new AI Agent.
    - The form is validated to ensure that all required fields are filled in correctly.
    - If there are errors, error messages are displayed to guide the user.
    - Upon successful saving, the "New AI Agent" form closes and the new AI Agent appears in the AI Agents interface.
2. **Click the "Cancel" Button:** To discard the changes and close the "New AI Agent" form without saving, click the "Cancel" button.
    - A confirmation prompt may appear to prevent accidental data loss.

### Managing Existing AI Agents

The AI Agents interface provides a range of actions for managing existing agents:

- **Editing an AI Agent:**
    1. **Locate the AI Agent:** In the AI Agents interface, find the AI Agent you want to edit.
    2. **Click the "Edit" Icon:** Click the "Edit" icon (pencil icon) associated with the AI Agent. This will open the AI Agent's configuration settings in edit mode.
    3. **Modify the Settings:** Make the desired changes to the agent's configuration settings.
    4. **Click the "Save" Button:** Click the "Save" button to save the changes.
    5. **Click the "Cancel" Button:** Click the "Cancel" button to discard the changes.
- **Sharing an AI Agent:**
    1. **Locate the AI Agent:** In the AI Agents interface, find the AI Agent you want to share.
    2. **Click the "Share" Icon:** Click the "Share" icon associated with the AI Agent.
    3. **Sharing Options:** Show the sharing model with two options: `Share to Secret Link` and `Share to TypingMind`.
        - `Share to Secret Link`: Generate the secret link to share with other people.
        - `Share to TypingMind`: Not implemented yet.
- **Copying an AI Agent's System Instruction:**
    1. **Locate the AI Agent:** In the AI Agents interface, find the AI Agent you want to copy the system instruction.
    2. **Click the "Copy" Icon:** Click the "Copy" icon associated with the AI Agent.
    3. **List of options will show to copy the content.**
- **Deleting an AI Agent:**
    1. **Locate the AI Agent:** In the AI Agents interface, find the AI Agent you want to delete.
    2. **Click the "Delete" Icon:** Click the "Delete" icon (trash can icon) associated with the AI Agent.
    3. **Confirmation Prompt:** A confirmation prompt ("Click again to confirm") appears to prevent accidental deletion.
    4. **Confirm Deletion:** Click the "Delete" icon again to permanently remove the AI Agent.

### Starting a Chat with an AI Agent

1. **Locate the AI Agent:** In the AI Agents interface, find the AI Agent you want to chat with.
2. **Click the "Chat now" Button:** Click the "Chat now" button associated with the AI Agent. This will open a new chat session with the selected agent.
    - The AI Agent's icon and name are displayed in the chat interface.
    - The AI Agent's welcome message (if defined) is automatically sent to the user.
    - The conversation starters (if defined) are displayed as buttons or links, allowing the user to quickly initiate the conversation.
</AI_AGENTS_FEATURES>

<PROMPT_LIBRARY_FEATURES>
## Prompt Library Features

The Prompt Library in TypingMind serves as a centralized repository for pre-written message templates, designed to streamline user interaction with AI models and AI Agents. It allows users to quickly insert commonly used prompts, apply prompt chaining techniques, and build efficient AI-powered workflows.

### Accessing the Prompt Library Interface

1. **Locate the "Prompts" Icon:** In the left sidebar, find the icon that represents the Prompt Library. The icon typically depicts a document or book with text on it.
2. **Click the "Prompts" Icon:** Clicking this icon navigates you to the main Prompt Library interface.

### Prompt Library Interface Overview

The Prompt Library interface is designed for easy browsing, searching, and management of prompts. It consists of the following key elements:

- **Page Title:** Displays the title "Prompt Library" in a prominent font, clearly indicating the page's purpose.
- **Page Description:** A concise description of the Prompt Library's functionality is displayed below the title.
    - Example: "Prompts are message templates that you can quickly fill in chat, work with AI agents, or build your workflow."
- **Tab Navigation:** The prompt library has two tabs: "Your Prompts" and "Community Prompts".
    - "Your Prompts": A number is displayed next to the tab name, indicating the number of prompts you have created.
    - "Community Prompts": A number is displayed next to the tab name, indicating the number of community prompts you have added to your library.
- **Search Bar:** A text input field labeled "Search your prompts" allows users to quickly find specific prompts by name or keyword.
    - The search bar includes a magnifying glass icon.
    - As the user types, the list of displayed prompts is dynamically filtered to match the search query.
    - The search considers prompt titles, descriptions, and tags.
- **"Add Prompt" Button:** A prominent button that initiates the process of creating a new prompt.
    - The button is typically green or blue to visually distinguish it as a primary action.
    - The button's label clearly indicates its function: "Add Prompt."
    - Clicking this button opens the "New Prompt" creation form.
- **"Browse Prompts" Button:** A blue button will be displayed. It will open another popup page to show off the prompts in TypingMind's marketplace
    - The button's label clearly indicates its function: "Browse Prompts."
    - User can select prompts from the prompts marketplace, then they will be added to your prompts library.
- **Filter by Tags:** A dropdown menu labeled "Filter by Tags" allows users to filter the prompts based on assigned tags.
    - Clicking the dropdown opens a list of available tags.
    - Selecting a tag filters the list of displayed prompts to show only those with the selected tag.
    - Multiple tags can be selected for more refined filtering.
- **Sort Order Dropdown:** A dropdown menu labeled with a sorting criterion (e.g., "Title") allows users to sort the prompts based on different criteria.
    - Common sorting options include "Title," "Last Used," and "Last Created."
        - Title: Sorts the prompts alphabetically by title.
        - Last Used: Sorts the prompts by the date they were last used, with the most recently used prompts appearing first.
        - Last Created: Sorts the prompts by the date they were created, with the most recently created prompts appearing first.
    - The currently selected sorting option is displayed in the dropdown label. An arrow indicates the sort direction (ascending or descending).
- **View Layout Toggle:** Two icons allow the user to switch between grid and list views for displaying prompts.
    - The selected layout is visually indicated (e.g., highlighted icon).
    - The "Grid" icon displays prompts in a card-based grid layout, showing more prompts at once.
    - The "List" icon displays prompts in a vertical list layout, providing more detailed information about each prompt.
- **Prompt Display Area (Main Content Area):** The main content area displays a grid or list of available prompts.
    - Each prompt is represented by a card or tile containing:
        - **Title:** The name of the prompt.
        - **Description:** A brief description of the prompt's purpose or function.
        - **Tags:** A list of tags associated with the prompt.
        - **Action Buttons/Icons:** A set of buttons or icons providing quick access to common actions:
            - **"Use now" Button:** Inserts the prompt into the current chat input field or executes the prompt, depending on the context.
            - **"Favorite" Icon (Star):** Adds the prompt to the user's list of favorite prompts for easy access. When the prompt is favorited, the star icon will change to be yellow.
            - **"Edit" Icon (Pencil):** Opens the prompt's configuration settings for modification.
            - **"Copy" Icon:** Show the options to copy the prompt content
                - `Copy content`: Copy the prompt's contents
                - `Copy as queue`: Copy the prompt's contents, converted into queue style
            - **"Delete" Icon (Trash Can):** Deletes the prompt (with confirmation).

### Using a Prompt in a Chat

There are two primary methods for using prompts in a chat: directly from the Prompt Library interface, and via the in-chat Prompt Library access button.

#### 1. From the Prompt Library Interface:

1. **Access the Prompt Library:** Navigate to the Prompt Library interface as described above.
2. **Browse or Search for a Prompt:** Use the search bar, filters, or category navigation to find the desired prompt.
3. **Click the "Use now" Button:** Locate the "Use now" button on the prompt's card or tile and click it.
    - **Action:** The prompt's text content is inserted directly into the active chat's input field. The user can then modify or send the prompt as needed.

#### 2. Via In-Chat Prompt Library Access Button:

1. **Open a Chat Session:** Start or open an existing chat session.
2. **Locate the "Prompt Library" Button:** In the message input area (where you type your messages), find the icon or button that represents the Prompt Library. This may be a book icon or a button labeled "Prompt Library." The button is located between `@` button and the `Format` button.
3. **Click the "Prompt Library" Button:** Clicking this button opens a popup window displaying the Prompt Library interface within the chat session.
    - **Functionality:** The popup window contains the same elements as the main Prompt Library interface: search bar, filters, prompt list, action buttons.
4. **Browse or Search for a Prompt:** Use the search bar, filters, or category navigation to find the desired prompt within the popup window.
5. **Click the "Use now" Button:** Locate the "Use now" button on the prompt's card or tile within the popup window and click it.
    - **Action:** The prompt's text content is inserted directly into the chat's input field. The user can then modify or send the prompt.
6. **Close the Popup Window:** Once the prompt has been inserted, close the Prompt Library popup window to return to the chat session.

### Creating a New Prompt

1. **Click the "Add Prompt" Button:** In the main Prompt Library interface, click the "Add Prompt" button. This will open the "New Prompt" creation form.

### New Prompt Form Overview

The "New Prompt" form is structured to guide users through the creation and configuration of a new prompt. It includes the following key sections:

### 1. Prompt Details Section

- **Title:**
    - **Purpose:** Assign a descriptive title to the prompt. This title will be used to identify the prompt in the Prompt Library interface.
    - **Input Type:** Text field.
    - **Placeholder Text:** "Prompt Title (e.g., 'Domain Names Inspirations')"
    - **Requirement:** Mandatory. The prompt cannot be saved without a title.
- **Description:**
    - **Purpose:** Provide a brief description of the prompt's purpose or function. This description is for the user's information and is displayed in the Prompt Library interface.
    - **Input Type:** Text area (multi-line text field).
    - **Example Text:** "E.g., A list of domain names based on topics"
    - **Requirement:** Optional, but highly recommended.
- **Prompt:**
    - **Purpose:** Enter the actual text of the prompt. This is the message template that will be inserted into the chat input field when the prompt is used.
    - **Input Type:** Text area (multi-line text field).
    - **Special Formatting:** Use `{{field 1}} {{field 2}} {{for anything}}` to indicate the fill in the blank part.
    - **Requirement:** Mandatory. The prompt cannot be saved without prompt text.
    - **Visual Cue:** A visual representation of where the current prompt text falls on the scale between "Concise" and "Descriptive."

### 2. Settings & Tips Section
- **Tags:**
    - **Purpose:** Assign tags to the prompt to help organize and filter prompts in the Prompt Library interface.
    - **Input Type:** Text field with auto-suggest.
    - **Functionality:**
        - The user can type in the field to create a new tag. Pressing "Enter" creates the new tag. The new tag will show up in the dropdown immediately.
            - The text input field is a single-line field with rounded corners.
            - The text color in the input field is black.
            - The background color is white.
        - Existing tags can be added by typing, with the suggestion of available tags.
        - The user can assign the prompt to multiple tags. The tags are displayed with a small "x" icon for removal.
            - The selected tags are displayed as small, rounded boxes with white text on a grey background.
            - To delete a tags, user can click on the `x` button to the left of the tags.
    - **Requirement:** Optional.
- **Tips:**
    - **Purpose:** Provide helpful information and guidance on using the Prompt Library effectively.
    - **Functionality:** This section contains expandable sections with various tips and instructions:
        - **How to Use Queue for Prompt Chaining:**
            - A description of how to use queues to separate different sections of a prompt.
            - Instruction: Use `----` (four dashes) to separate different sections of a queue
            - Example:
                - Task 1: Complete the report
                - `----`
                - Task 2: Schedule a meeting
            - Clicking the plus icon (+) expands the section to reveal more details.
            - Clicking the minus icon (-) collapses the section to hide the details.
        - **How to Mention AI Agents:**
            - Explanation of how to mention AI Agents in prompts to direct the AI's behavior.
            - Instruction: Use `@[Agent Name]` to add a specific AI agent into the conversation
            - Example: Hey @[Marketing Expert], can you help create a business plan for this quarter?
            - You can mention multiple agents using queue syntax:
                - @[Research Analyst], what is the recent data on smartphone sales?
                - `----`
                - @[Marketing Expert], based on the data, propose a marketing strategy.
            - Clicking the plus icon (+) expands the section to reveal more details.
             - Clicking the minus icon (-) collapses the section to hide the details.
        - **Template Variables:**
            - Explanation of how to use template variables to create dynamic prompts.
            - Your custom variables: Use `{{variable name}}` for dynamic content in templates
                - Example: I want you to act as an English pronunciation assistant. My first sentence is: `{{your content}}`.
            - System variables: Use the exact variable `{local_date}` to allow the AI to retrieve the current date.
                - Example: Get all my meetings this week from Google Calendar. Today's date is: `{local_date}`
            - Clicking the plus icon (+) expands the section to reveal more details.
            - Clicking the minus icon (-) collapses the section to hide the details.

### Adding or Canceling the New Prompt

1. **Click the "Add Prompt" Button:** After configuring all desired settings, click the "Add Prompt" button (typically located in the top-right corner of the form) to add the new Prompt to the list.
    - The form is validated to ensure that all required fields are filled in correctly.
    - If there are errors, error messages are displayed to guide the user.
    - Upon successful saving, the "New Prompt" form closes and the new Prompt appears in the Prompt Library interface. A confirmation message "Added to your prompt library" shows up at the top.
2. **Click the "Cancel" Button:** To discard the changes and close the "New Prompt" form without saving, click the "Cancel" button.
    - A confirmation prompt may appear to prevent accidental data loss.

### Managing Existing Prompts

The Prompt Library interface provides a range of actions for managing existing prompts:

- **Editing a Prompt:**
    1. **Locate the Prompt:** In the Prompt Library interface, find the Prompt you want to edit.
    2. **Click the "Edit" Icon:** Click the "Edit" icon (pencil icon) associated with the Prompt. This will open the Prompt's configuration settings in edit mode.
    3. **Modify the Settings:** Make the desired changes to the Prompt's configuration settings.
    4. **Click the "Add Prompt" Button:** Click the "Add Prompt" button to save the changes.
    5. **Click the "Cancel" Button:** Click the "Cancel" button to discard the changes.
- **Deleting a Prompt:**
    1. **Locate the Prompt:** In the Prompt Library interface, find the Prompt you want to delete.
    2. **Click the "Delete" Icon:** Click the "Delete" icon (trash can icon) associated with the Prompt.
    3. **Confirmation Prompt:** A confirmation prompt ("Click again to confirm") appears to prevent accidental deletion.
    4. **Confirm Deletion:** Click the "Delete" icon again to permanently remove the Prompt.

</PROMPT_LIBRARY_FEATURES>

<PLUGINS_FEATURE_DEEP_DIVE>

## Using Plugins

TypingMind's plugin system greatly extends the capabilities of AI models by allowing them to access external data sources, perform specialized tasks, and interact with other applications. Here's a detailed guide on how to use plugins within TypingMind:

### 1. Enabling Plugins

Before you can use a plugin, it needs to be enabled.

#### a. Accessing the Plugin List

1.  **Open a Chat:** Start or open an existing chat.
2.  **Access the Plugin Enable/Disable Modal:** In the chat interface, there are two ways to access the Plugin Enable/Disable Modal:
    *   Click the tool icon: Click the tool icon next to model dropdown.
    *   Click the Manage Plugins: At the bottom of the plugin list, there is a "Manage Plugins" option. Click on this to open the `Plugin Manager` modal.
3.  **Plugin List Display:** The list displays all installed plugins. Each plugin is shown with its name.

#### b. Enabling/Disabling Individual Plugins
1. **Enable Plugins**: At the top, there is a Enable Plugins option with a toggle.
2.  **Toggle Switch:** To the right of each plugin's name is a toggle switch.
    *   **Enabled State:** When the toggle is switched to the right (typically displayed with a blue color or checkmark), the plugin is enabled and available for use in the current chat.
    *   **Disabled State:** When the toggle is switched to the left (typically displayed in gray), the plugin is disabled and will not be used in the current chat.
3.  **Click to Toggle:** Click the toggle switch to change the plugin's state. The change is immediate. A brief visual cue (e.g., a checkmark or transition animation) may indicate the status change.
4.  **Confirm Status:** Verify that the toggle switch is in the desired position to confirm the plugin's status.
5.  **Plugins number**: On top of the popup shows the number of plugins enabled

### 2. Using Plugins in a Chat

Once a plugin is enabled, you can use it by including specific instructions or keywords in your prompts.

#### a. Prompting for Plugin Use

1.  **Compose a Prompt:** In the message input field, type a prompt that clearly instructs the AI to use the desired plugin.
    *   **Clear Instructions:** The prompt should explicitly mention the plugin's name or the task you want it to perform.
        *   Example (Web Search): "What is the current gold price today?"
        *   Example (DALL-E 3): "Generate a picture of a cat"
2.  **Triggering the Plugin:** When the AI processes your prompt, it will recognize the instruction to use the plugin and attempt to execute it.
3.  **Plugin Execution:**
    *   The AI may first respond with a message indicating that it will use the plugin. For example, "I'll search for the current gold price information."
    *   The plugin will then run in the background, retrieving data or performing the requested task.
    *   A "Plugin is running" message show.
4.  **Displaying Results:** The plugin's results will be displayed in the chat, typically formatted for easy readability.
    *   Example (Web Search): The search results might be displayed as a list of links with titles and snippets.
    *   Example (DALL-E 3): The generated image will be displayed directly in the chat.

#### b. Plugin Specific Interfaces

Some plugins may offer additional interfaces for advanced configurations.

### 3. Advanced Plugin Management
The Plugin management can be accessed by clicking the `Manage Plugins` on the plugin selection page. This popup brings the user to the Plugins Tab page, which includes detailed configurations and functionalities.

#### a. Accessing the Plugin List

1.  **Navigate to the "Plugins" Section:** In the left sidebar, click on the "Plugins" icon. This will open the Plugins Management interface.

#### b. Plugin Interface Overview

The Plugin Interface consists of the following key elements:
- **Page title:** The title should be in a prominent font, clearly indicating the page's purpose, such as "Plugins".
- **Page Description:** A concise description of the plugins' functionality may be displayed below the title, such as "Extends the capabilities of the AI with custom functions and workflows."
- **"Plugin Store" Button:** A button navigate to the Plugin Store. The plugin store shows a list of plugins available to install, filter by categories.
- **"Select multiple plugins" Button:** A button to allow the user to select multiple plugins at once.
- **Search Bar:** A text input field allows users to quickly find specific plugin by name or keyword.
- **"Create Plugin" Button:** A button navigates to the Create Plugin page, which contains the detailed configurations for a new plugin. The new plugin will be added to the list.
- **"Import" Button:** A button navigates to the Import Plugin page, which contains the detailed configurations for importing a plugin.
- **Plugin List (Installed):** A list of plugins that have already been installed. User can choose one to configure.
- **Plugin Configuration:** When a plugin is selected from the installed list, the Plugin Configuration page will show.
- **Plugin List (Available):** A list of plugins that are ready to be installed. User can click to install or view details.
- **Grid/List mode Toggle:** A switch to allow user to view with list mode or grid mode.

#### c. Plugin Configuration
The Plugin Configuration includes several sections and button to let the user configure.
- **Plugin Name:** The name of the plugin.
- **"Edit" Button:** A button navigate to the Create Plugin page, which contains the detailed configurations for a plugin. User can edit the plugin's settings.
- **"Uninstall" Button:** A button to uninstall the plugin. It trigger the double confirmation (`Sure?`, and `Click again to confirm`)
- **Enable/Disable:** A toggle switch to enable/disable the plugin.
- **Plugin Configurations Tabs**:
    -   **Overview:** Provides a brief description of the plugin's purpose, usage instructions, and any required API keys or settings.
    -   **Settings:** Allows you to configure specific settings for the plugin, such as API keys, search engine IDs, or image sizes.
    -   **Spec:** Displays the plugin's specification, which defines the functions and parameters that the plugin exposes to the AI model. This is typically displayed in JSON format.
    -   **Source:** Displays the source code of the plugin. This is useful for advanced users who want to understand how the plugin works or customize its behavior.

### 4. Web Search Plugin Example

Here's a detailed example of how to use the Web Search plugin:

#### a. Enabling the Plugin

1.  **Access the Plugin List:** Follow the steps above to access the plugin list (using the tool icon on the chat page or the Plugin section on the sidebar).
2.  **Locate Web Search:** Find the "Web Search" plugin in the list.
3.  **Enable Web Search:** Click the toggle switch to enable the plugin.

#### b. Configuring the Plugin

1.  **Click "Web Search" in the Plugin List:** After enabling, click the "Web Search" plugin in the list to configure it.
2.  **Go to "Settings" Tab:** Click the "Settings" tab in the plugin's configuration panel.
3.  **Enter API Keys:**
    *   **Search Engine ID:** Enter your Google Custom Search Engine ID.
    *   **Search Engine API Key:** Enter your Google Custom Search API Key.
    *   **Instructions:** If you don't have these keys, click the "instructions here" link.
    * **Save**: Click `Save` button after configuring API Keys

#### c. Using the Plugin in a Chat

1.  **Compose a Prompt:** In the message input field, type a prompt that instructs the AI to use Web Search.
    *   Example: "What is the current gold price today?"
2.  **Send the Prompt:** Click the "Send" button to send the prompt to the AI.
3.  **View Results:** The AI will use the Web Search plugin to search the internet for the current gold price and display the results in the chat.
    *   The results might include a list of links with titles and snippets from various websites.

#### d. Other usage

Another way, user can use the Web Search plugin is not to mention the plugin, but let the AI engine to decide whether to use the plugin or not.
For example, user asks "What is the name of CEO of Apple?".
When the AI engine doesn't know it, and this question needs online data source, it will automatically use the Web Search plugin to search for answer.

### 5. Interactive Canvas

The Interactive Canvas plugin allows the AI to generate interactive HTML content directly within the chat interface. Here's how to use it:

1.  **Enabling the Plugin:** Follow the general plugin enabling steps.
2.  **Prompt the AI:** Type a prompt that requests the AI to generate content.
3.  **Interactive canvas content**:
    *   After generation process, the content will be rendered as interactive canvas.
    *   It shows an Interactive content to let the user know what's happening.
    *   The user can also check the `Always show interactive content from this plugin without asking`.
    *   Clicking the "Show content" button allows the interactive content shows.
4.  **Preview mode**: Click on Preview mode to see the interactive content.
5.  **Code mode**: Click on Code mode to see the HTML code rendered.
6.  **Code copy**: Clicking the icon next to `Code` to copy the rendered HTML code.
7.  **Open in separate window**: Click the icon to render the content in another window.

## Important Considerations
- **Plugin Compatibility:** Ensure that the plugins you enable are compatible with the selected AI model. Some plugins may only work with specific models or API types.
- **API Keys:** Many plugins require API keys to access external services. Make sure you have the necessary API keys and that they are correctly configured in the plugin settings.
- **Prompt Clarity:** The more explicit you are in your prompts about which plugins to use and what tasks to perform, the better the AI will be at utilizing the plugins effectively.
- **Data Privacy:** Be aware of the data privacy implications of using plugins that access external data sources. Make sure you understand how the plugin handles your data and that you are comfortable with its privacy policies.
- **Context Window:** Complex interactions with multiple plugins or large amounts of data may exceed the AI model's context window. This can lead to truncated responses or errors.
- **Error Handling:** If a plugin fails to execute, TypingMind will typically display an error message. Refer to the plugin's documentation or settings for troubleshooting tips.

</PLUGINS_FEATURE_DEEP_DIVE>

<DEVELOP_CUSTOM_PLUGINS>
## Develop Custom Plugins

TypingMind provides a powerful platform for users to create their own plugins, extending the capabilities of the AI models and integrating them with various services and workflows. This section provides a deep dive into the process of creating custom plugins within TypingMind.

### Accessing the Plugin Creation Interface

1.  **Navigate to the "Plugins" Section:** In the left sidebar, click on the "Plugins" icon. This will open the Plugins Management interface.
2.  **Click the "Create Plugin" Button:** Located at the top-right corner of the Plugins Management interface, this button initiates the process of creating a new plugin. Clicking it opens the "Create Plugin" dialog.

### "Create Plugin" Dialog Overview

The "Create Plugin" dialog provides a comprehensive set of options for configuring the plugin's behavior, appearance, and functionality. It includes the following key sections:

*   **Need help creating plugins?** A link to the developer documentation. When click, it navigates the user to the documentation.
*   **Interactive Editor / JSON Editor:** Radio buttons to select the method for defining the plugin.
    *   **Interactive Editor:** Presents a user-friendly form with various input fields and settings for configuring the plugin.
    *   **JSON Editor:** Allows users to directly edit the plugin's configuration as a JSON string.
        *   When selected, a text area appears with pre-filled JSON code representing the plugin's structure.
        *   A `Load from Github` button is displayed.
            *  When click, a popup shows for user to enter the Github URL, the format is `owner/repo/path/to/file.json`.
        *   The JSON code can be manually edited to customize the plugin's behavior.
        *   A warning message is displayed "For quick development and testing of a new plugin. You can also import a plugin from GitHub and modify it before saving it to use. For additional information on the plugin data format and instructions for sharing via GitHub, please refer to this guide."
*   **Plugin Name:**
    *   **Purpose:** Assign a name to the plugin for easy identification within TypingMind.
    *   **Input Type:** Text field.
    *   **Placeholder Text:** "Plugin Name" is displayed when the field is empty.
    *   **Recommendation:** "4 words or less." is displayed as guidance.
    *   **Requirement:** Mandatory. The plugin cannot be created without a name.
*   **Icon URL:**
    *   **Purpose:** Provide a URL to an image that will be used as the icon for the plugin within TypingMind.
    *   **Input Type:** Text field.
    *   **Requirement:** Optional. If left blank, a default icon will be used.
    *   **Recommendation:** The text "Recommendation: 128x128" is displayed to the user.
    *   **Recommendation:** Use a direct link to an image file (e.g., PNG, JPG) for best results.
*   **Overview (Markdown Supported):**
    *   **Purpose:** Describe the plugin's functionality and usage to other users. This overview is displayed in the plugin's details page.
    *   **Input Type:** Text area (multi-line text field).
    *   **Support markdown:** The editor support the Markdown format for text styling.
    *   **Requirement:** Optional, but highly recommended.
*   **OpenAI Function Spec:**
    *   **Purpose:** Define a JSON string that describes the function of the AI assistant to do when the plugin is used. The structure has to comply with OpenAI function calling specification.
    *   **Input Type:** Text area (multi-line text field).
    *   **Requirement:** Mandatory.
    *   **"Instructions & Examples here" Link:** A hyperlink is provided to direct users to OpenAI documentation and examples.
*   **User Settings (JSON, Optional):**
    *   **Purpose:** Define user-specific settings that will be passed to the plugin when it is called.
    *   **Input Type:** Text area (multi-line text field).
    *   **Requirement:** Optional.
    *   **"See Example JSON and instruction here" Link:** A hyperlink is provided to direct users to example JSON snippets and instructions.
*   **Plugin Context:**
    *   **Purpose:** Define the advanced instructions to the AI. This works in combination with the plugin's spec function description, you can use this to provide more detailed prompts or add real-time data even before the plugin is run.
    *   **Requirement:** Optional.
    *   **"+ Add Context" Button:** This button adds a dynamic context configuration section. See the description from the `MODEL_PARAMETERS_SETTINGS`.
*   **Authentication:**
    *   **Purpose:** Define what authentication this plugin use.
    *   **Input Type:** Dropdown.
    *   **Options:**
        *   `None`: No authentication required.
        *   `API Key`: Required the user to fill in the API Key before using.
        *   `OAuth 2.0`: Required the user to configure the OAuth 2.0 settings.
*   **Implementation:**
    *   **Purpose:** Select the implementation for plugin.
    *   **Input Type:** Dropdown.
    *   **Options:**
        *   `JavaScript Code`: Run Javascript code on the client side.
        *   `HTTP Action`: Perform an HTTP request.
*   **Implementation:**
    Depending on the implementation option:
    *   If `Javascript Code` is selected:
        *   **Javascript Code Implementation:** A text editor to input javascript.
        *   When `Test` button is clicked, if the Javascript code is invalid, an error will show.
    *   If `HTTP Action` is selected: This section will be displayed.
        *   **Available variables:** A small box display variables such as `param1`, `variableName1`, `variableName2`.
        *   **HTTP Method:** A select box to choose HTTP method, such as GET, POST, PUT, DELETE, PATCH.
        *   **Endpoint URL:** An input box to enter the URL.
        *   **Add Request Headers**: Click to add more request headers. A JSON code will be shown below.
        *   **Add Request Body**: Click to add more request body. A JSON code will be shown below.
        *   **Request Body Format**: If Formdata is selected, the request body JSON will be converted to Formdata. Has two options:
            *   `JSON`.
            *   `URL Encoded`.
        *   **Post-Processing**: Note: Post-Processing only works with JSON responses.
            *   Processing Engine: Support Jmespath Transform and Handlebars.js Template.
                *   With `Jmespath Transform`, an Expression text area is displayed.
                *   With `Handlebars.js Template`, a Template text area is displayed.
        *   **Add Test Variables**:
            *   Click to add more test variables. A JSON code will be shown below.
        *   **Test Request**: A button to run the test.
*   **Output Options:**
    *   **Purpose:** Choose the output format, has the AI agent decide on output, output as Markdown, or Interactive HTML.
    *   **Input Type:** Dropdown.
    *   **Options:**
        *   `Give plugin output to the AI`: By default, the plugin's output will be given to the AI and then the AI will decide how to respond to the user.
        *   `Render plugin output as markdown`: Render the plugin output as markdown.
        *   `Render plugin output as interactive HTML`: Render the output as an HTML for better viewing.
*   **Cancel Button:** Discards the changes and closes the dialog.
*   **Save Button:** Saves the plugin configuration and closes the dialog.

### Create a Plugin: A Deep Dive for Pro Users

This section delves into the technical aspects of creating the plugin, providing insights for advanced users who want to understand the plugin's configurations.

*   When user select `Share` button:
    *   Share Plugin: <Plugin Name>
    *   How do you want to share this plugin?
    *   Secret Link: This plugin can be installed by anyone who has the link.
        *   When user select it, a loading is displayed.
        *   It's done! is displayed.
        *   Please make a copy of the links below, you can also manage all previous shared links in `Manage Shared Links`.
        *   Your Public Link: (tap below to copy).
        *   The Public Link is displayed for user to copy.
        *   To delete the link above, go here:
            *   A link to delete, same as `Manage Shared Links`.
        *   Close: A button to close the popup window.
    *   JSON: Share & download as a JSON file
        *   When user select it, a text area is displayed, inside is a JSON string.
        *   Here is your plugin in JSON:
        *   Copy Content: A button to copy the content.
        *   Download .json: A button to download the JSON.
        *   Close: A button to close the popup window.

### Managing Shared Links
*   Refer to the Cloud Sync & Backup Feature.

### Running a Plugin
*   Prompt the AI engine to run the plugin.
*   The AI engine will prompt to fill in any variables, following the configuration in User Settings.
*   The AI engine will run the plugin.
</DEVELOP_CUSTOM_PLUGINS>

<APP_SETTINGS>
## App Settings

The "Settings" section in TypingMind provides access to a wide range of configuration options, allowing users to customize the application's behavior and appearance to suit their preferences. Here's a detailed breakdown of each setting category:

### Accessing the Settings Interface

1.  **Locate the "Settings" Icon:** In the left sidebar, find the icon that represents the Settings. The icon typically depicts a gear or cogwheel.
2.  **Click the "Settings" Icon:** Clicking this icon navigates you to the main Settings interface.

### Settings Interface Overview

The Settings interface is organized into several categories, each containing related settings. The categories are displayed in a vertical list on the left side of the interface.

#### Settings Categories:

1.  **Account & Data:**
    *   **App Data & Storage:** Manages local data storage and import/export settings.
    *   **Cloud Sync & Backup:** Configures cloud synchronization and backup options.
2.  **Preferences:**
    *   **General:** Adjusts general application settings.
    *   **Appearance:** Customizes the application's visual appearance.
    *   **Keyboard Shortcuts:** Customize the keyboard shortcuts.
    *   **Text-to-speech**: Configure the settings for text-to-speech.
    *   **Voice Input**: Configure the settings for voice input.
3.  **Advanced Settings:**
    *   **Extensions**: Install the Javascript extensions to the apps.
    *   **Proxy & Org ID**: Set up the proxy & Org ID

### 1. Account & Data Settings

#### a. App Data & Storage

This section provides tools for managing the application's data, including exporting, importing, and deleting data.

*   **You have \[number] saved prompts, \[number] plugins, \[number] custom models, \[number] characters, \[number] folders, \[number] chats with \[number] messages on this device.**: This line of text is a summary of the user's data.
*   **Export Button:**
    *   **Function:** Exports all TypingMind data (chats, prompts, models, settings, etc.) to a single file.
    *   **Workflow:**
        1.  Clicking the "Export" button opens a modal window.
        2.  **Export Selections:** The modal window presents a list of checkboxes, allowing the user to select which data types to include in the export:
            *   Chats: Chat conversations
            *   Folders: Chat folders
            *   Prompts: Custom prompts
            *   Characters: User-defined characters
            *   Plugins: Installed plugins
            *   Profiles: User profiles
            *   Preferences: Application preferences
            *   Model Settings: Model configurations
            *   Keyboard Shortcuts: Customized keyboard shortcuts
            *   Custom Models: User-defined custom models
        3.  Click the "Download File" button. The download file name should follow this format: `20250223_175030_typingmind_exp`, with the first part showing the current date and time.
            *   Clicking "Download File" triggers a standard "Save As" dialog, allowing the user to choose the file name and location.
            *   The exported data is saved as a single file (typically in JSON format) containing all selected data types.
*   **Import Button:**
    *   **Function:** Imports TypingMind data from a previously exported file.
    *   **Workflow:**
        1.  Clicking the "Import" button opens a file selection dialog.
        2.  The user selects the TypingMind export file (typically in JSON format).
        3.  TypingMind reads the data from the file and imports it into the application.
        4.  The imported data is merged with the existing data in the application.
        5.  A success or error message is displayed to indicate the status of the import process.
*   **Delete All Local Data Button:**
    *   **Function:** Deletes all TypingMind data from the local device.
    *   **Workflow:**
        1.  Clicking the "Delete All Local Data" button displays a confirmation prompt ("Are you sure you want to delete everything?") to prevent accidental data loss.
        2.  The user must confirm the deletion by clicking "Delete".
        3.  TypingMind deletes all locally stored data, including chats, prompts, models, settings, and other user-defined content.
        4.  The application is reset to its default state, as if it were a fresh installation.
        5. All local data is removed.
*   **Import From OpenAI Link:**
    *   **Function:** Imports the chat history from OpenAI
    *   **Instruction:** The data imported only contains the chat history.
    *   **Workflow:**
        1.  Clicking the "Import From OpenAI" button opens a file selection dialog.
        2.  The user selects the OpenAI export file (typically in JSON format).
        3.  TypingMind reads the data from the file and imports it into the application.
*   **How to export data from OpenAI? Link** A link will navigates to the instruction to show the steps.
*   **Shared Data Section:**
    *   **Manage Shared Links Button:** This will shows the model to manage the shared link. This is mentioned above.
*   **Storage Stats Section:**
    *   "All of your data is stored locally in your browser. Each browser has a different limit of how much data you can store. If you are running out of space, you can delete some of your old chats.": This is instruction for user
    *   **Metadata & User Data:**
        *   The storage bar is displayed to show off the capacity of data and percentage. For example, `0.07 MB (1.48%)`
        *   The storage limit of Metadata & User Data is `5.00 MB`.
    *   **Local Chat Data:**
        *   The storage bar is displayed to show off the capacity of data. For example, `42.66 MB`
        *   The storage limit of Local Chat Data is `555.81 GB`.
    *   "Please export and backup your chats regularly to avoid data lost! Learn how to protect your data.": A suggestion to let the user understand the importance of backup.
*   **Archived Chats Section:**
    *   The Archived Chats sections displays the user's archived chats
    *   You have \[number] archived chats.
    *   **Manage Archived Chats**: Shows all archived chats and user can chose one to restore.

#### b. Cloud Sync & Backup

This section provides access to cloud sync and backup configurations. This is covered in the "CLOUD\_SYNC\_AND\_BACKUP\_FEATURES"

### 2. Preferences Settings

#### a. General

This section provides access to general application settings.

*   **Stream AI responses word by word (typing animation):**
    *   **Function:** Toggles the streaming of AI responses.
    *   **Input Type:** Toggle switch.
    *   **Enabled State:** AI responses are displayed word by word, creating a "typing animation" effect.
    *   **Disabled State:** AI responses are displayed all at once after the AI has finished generating the entire response.
    *   "Cost estimation be less accurate when stream response is enabled.": A note to describe the accuracy.
*   **Auto generate title for new chats:**
    *   **Function:** Enables or disables the automatic generation of chat titles.
    *   **Input Type:** Toggle switch.
    *   **Enabled State:** TypingMind automatically generates a title for new chats based on the first message.
        *   "Ask the AI assistant to generate a title based on the first message when starting a new chat. This will consume more tokens used in the first message. (All subsequent message tokens will not be affected.)"
    *   **Disabled State:** Chat titles must be manually entered by the user.
    *   **Advanced Settings:** An expandable section is displayed
        *   **Model For Title Generation:** Has options such as `Auto`, `Ollama / LLava`, `DeepSeek R1`, etc.
        *   **Instruction**: Provide instructions of the title's role.
*   **Auto suggest relevant keywords after each message:**
    *   **Function:** Enables or disables the automatic suggestion of relevant keywords.
    *   **Input Type:** Toggle switch.
    *   **Enabled State:** TypingMind automatically suggests keywords based on the chat
        *   "Ask the AI assistant to suggest relevant keywords if the answer is more than 500 characters long. This will consume more of your token.": Text here
        *   **Advanced Settings:** An expandable section is displayed
        *   **Search Suggestions Link:** Select the suggestions engines: Google, DuckDuckGo, Bing, Brave, Kagi.
*   **Sound notifications:**
    *   **Function:** Toggles sound notifications for new AI responses when the user is inactive.
    *   **Input Type:** Toggle switch.
    *   **Enabled State:** A sound notification is played when a new AI response is received while the user is not actively using the application.
    *   **Disabled State:** No sound notifications are played.
*   **Reopen previous chat when app open:**
    *   **Function:** Toggles the automatic reopening of the most recent chat when the application is launched.
    *   **Input Type:** Toggle switch.
    *   **Enabled State:** TypingMind automatically reopens the most recent chat session when the application is launched.
    *   **Disabled State:** TypingMind opens to the main chat list when the application is launched.
*   **Auto archive old chats:**
    *   **Function:** Automatically archives chats that are older than a specific period. Exceptions: Favorited chats, chats in folders, or chats with tags will not be archived automatically.
    *   **Input Type:** Toggle switch.
        *   **Archive chats older than**: Dropdown menu to select time, has options: `24 hours`, `48 hours`, `3 days`, `1 week`, `2 weeks`, `3 weeks`, `1 month`, `2 months`, `3 months`.
*   **Auto delete archived chats:**
    *   **Function:** Automatically delete archived chats after they have been archived for a specific period.
    *   **Input Type:** Toggle switch.
        *   **Duration Before Deleting Archived Chats**: Dropdown menu to select time, has options: `24 hours`, `48 hours`, `3 days`, `1 week`, `2 weeks`, `3 weeks`, `1 month`, `2 months`, `3 months`.

#### b. Appearance

This section allows users to customize the application's visual appearance.

*   **Theme:**
    *   **Function:** Sets the overall theme of the application.
    *   **Input Type:** Dropdown menu.
    *   **Options:**
        *   Light: Applies a light color scheme.
        *   Dark: Applies a dark color scheme.
        *   System: Uses the system's default theme (light or dark) based on the user's operating system settings.
*   **Sidebar Color:**
    *   **Function:** Sets the color theme for the sidebar.
    *   **Visual Presentation:** Shows a color theme in the sidebar.
    *   **Reset to default:** The "Reset to default" button will be showed
    *   Click on color will bring up a popup, let the user choose the color of the sidebar.
*   **Sidebar Style:**
    *   **Function:** Sets the overall style for the sidebar.
    *   **Input Type:** Dropdown menu.
    *   **Options:**
        *   Default: Applies a standard styling to the sidebar.
        *   Compact: Applies a compact styling to the sidebar.
*   **Font Size:**
    *   **Function:** Sets the font size of the text in the application.
    *   **Input Type:** Dropdown menu.
    *   **Options:**
        *   Small: Applies a small font size.
        *   Medium: Applies a medium font size.
        *   Large: Applies a large font size.
        *   Extra Large: Applies an extra large font size.
        *   Extra Extra Large: Applies an extra extra large font size.

#### c. Keyboard Shortcuts

This section allows users to customize keyboard shortcuts for common actions within TypingMind.

*   **Function:** Change the keyboard shortcuts.
*   **Open Search:** Has options for user to change from `⌘ + K`, or `⌘ + [A-Z]`.
*   **Toggle Sidebar**: Has options for user to change from `⌘ + G`, or `⌘ + [A-Z]`.
*   **New Chat**: Has options for user to change from `⌘ + N`, or `⌘ + [A-Z]`.
*   **Reset Chat**: Has options for user to change from `⌘ + R`, or `⌘ + [A-Z]`.
*   **Regenerate**: Has options for user to change from `⌘ + E`, or `⌘ + [A-Z]`.
*   **Clear Context**: Has options for user to change from `⌘ + J`, or `⌘ + [A-Z]`.
*   **Toggle Plugins**: Has options for user to change from `⌘ + P`, or `⌘ + [A-Z]`.
*   **Copy Last Message**: Has options for user to change from `⌘ + C`, or `⌘ + [A-Z]`.

#### d. Text-to-speech

This section allows users to configure the text-to-speech settings.

*   **Speech API:**
    *   **Function:** Sets the text-to-speech engines
    *   **Input Type:** Dropdown menu.
    *   **Options:**
        *   Disabled: Disable text-to-speech
        *   ElevenLabs (Beta): Use text-to-speech with ElevenLabs
        *   OpenAI Text-to-speech: Use text-to-speech with OpenAI
        *   Browser (Web Speech API): Use text-to-speech with Browsers.
*   **Voice Settings:**
    *   Displays only if text-to-speech has been enabled.
    *   **ElevenLabs**:
        *   A text box to enter the ElevenLabs API key.
        *   A "Register Here" link to navigate to ElevenLabs.
        *   After enter the API Key, a "Check Key" button is enabled to validate API Key.
        *   A dropdown menu to select the Voices, such as `Adam`, `Antoni`, etc.
        *   **Advanced Options**:
            *   Model: Eleven Flash v2
            *   Stability: Increasing stability will make the voice more consistent between re-generations, but it can also make it sounds a bit monotone. On longer text fragments we recommend lowering this value.
            *   Clarity + Similarity Enhancement: High enhancement boosts overall voice clarity and target speaker similarity. Very high values can cause artifacts, so adjusting this setting to find the optimal value is encouraged.
        *   Custom Voices. Can add name, voice ID. Can remove by double confirm.
    *   **OpenAI Text-to-speech**:
        *   A dropdown menu to select the Voices, such as `Alloy`, `Echo`, etc.
        *   **Advanced Options**:
            *   Model: TTS
            *   Speed: Can configure the speed of the AI reading.
    *   **Browser (Web Speech API)**:
        *   A dropdown menu to select the Voices, such as `Samantha`, `Bubbles`, etc.
        *   Rate: Slower and Faster slider
        *   Pitch: Lower and Higher slider
    *   **Test audio**: To input the text for testing
        *   "Hello, this is the test audio for the AI assistant."
        *   Can click on `Play` button to run the text-to-speech.
    *   **Show Play button after assistant messages:** Toggles the visibility of Play button.
    *   **Auto play assistant messages:** Enable to auto play the message.

#### e. Voice Input

This section allows users to configure the voice input settings.
*   Speech API can chose:
    *   Web API (Free)
    *   OpenAI Whisper
    *   Groq Whisper
    *   Azure Whisper
*   **Auto start recording when open**: User enable this so when the voice input function is trigger, it will automatically start the recording
*   **Auto send the message after speaking**: User enable this, after the audio is completely recorded, and automatically transfer into message and send to AI assistant.

### 3. Advanced Settings

#### a. Extensions

The extensions allow users to inject Javascript extension to the apps.
*   The guide text "Extensions allow you to load custom JavaScript into the application. This can be useful for adding custom functionality or integrating with other services."
*   A "Learn More" link for more guide.
*   A prompt "Note: Extensions have full access to the application and can read and modify any data. Only install extensions from sources you trust.":
*   Enter extension URL, click `install`.

#### b. Proxy & Org ID

This section allows users to configure advanced network and proxy settings.
*   OpenAI Chat Completions Endpoint (V1): Set up proxy. Can click on `Reset Default` to reset default value.
*   Anthropic Chat Completions Endpoint: Set up proxy. Can click on `Reset Default` to reset default value.
*   OpenAI Whisper Endpoint (V1): Set up proxy. Can click on `Reset Default` to reset default value.
*   OpenAI API Org ID: Can click on `Reset Default` to reset default value.
*   "Note: You may need to update your API key after changing the endpoint.": A guide to let the user know what to do after changing endpoint.

</APP_SETTINGS>

<PLUGINS_BUILT_IN>
## Built-in Plugins

TypingMind comes with a range of built-in plugins, each designed to extend the capabilities of the platform. Here is a detailed list:

### 1. Web Search

-   **Description:** Searches for information from the internet in real-time using Google Search.
-   **Functionality:** Allows the AI to access up-to-date information from the web to answer user queries, provide context, or perform research.
-   **Configuration:**
    -   Requires a Google Custom Search Engine ID and API Key.
    -   The overview tab provides two example query: `What's the gold price?`, and `How's the weather at HCMC at the moment?`.
-   **Settings Tab:**
    -   **Search Engine ID (*):** This is the unique identifier for your Google Custom Search Engine. User can follow this pattern `03b41cca8970b5458c`.
    -   **Search Engine API Key (*):** This is your Google Custom Search API key. A long string of alphanumeric characters. For instance, `AIzaSyDIaJqTfPYwGsGCwUvdQkQ-08o9z24`.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"get_web_search_results"`.
    -   `description`: `"Search for information from the internet using Google Search."`.
    -   The `parameters` consists of properties such as `keyword`, `source` with `type`, and `description`.
-   **Source Code:** The full source code of the javascript to get web search results.

### 2. DALL-E 3

-   **Description:** Generates images using DALL-E 3 based on image descriptions. Adheres to guidelines such as English and avoiding specific content.
-   **Functionality:** Allows users to create unique images directly from text prompts.
-   **Configuration:**
    -   Requires an OpenAI API key.
    -   The overview tab provides one example query: `Generate a picture of a cat`.
-   **Settings Tab:**
    - No settings.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"image_generation_via_dalle_3"`.
    -   `description`: `"Generate images using DALL-E 3 based on image descriptions. Adhere to guidelines such as English and avoiding specific content."`.
    -   The `parameters` consists of properties such as `prompt`, `quality`, `resolution`, `n`, `size` with `type`, and `description`.
-   **Source Code:** The full source code of the javascript to create images using DALL-E 3.

### 3. Simple Calculator

-   **Description:** Helps the AI assistant do math calculations more accurately.
-   **Functionality:** Provides the AI with the ability to perform calculations, ensuring more precise and reliable answers to mathematical queries.
-   **Configuration:** No API Keys needed
-   **Settings Tab:** No settings.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"get_calculation_result"`.
    -   `description`: `"Calculate a math expression. For example, "2 + 2" or "2 * 2". The expression must be a valid JavaScript math expression for the calculation."`.
    -   The `parameters` consists of properties such as `expression` with `type`, and `description`.
    -   The overview tab provides two example query: `What is the total of 2 pi?`, and `What is 2*10?`.
-   **Source Code:** The full source code of the javascript to calculate a math expression.

### 4. Interactive Canvas

-   **Description:** Renders an interactive canvas with HTML source to the user interface. The HTML source can include forms, games, visualizations, or any other interactive content.
-   **Functionality:** Allows the AI to create dynamic and interactive experiences within the chat interface.
-   **Configuration:** No API Keys needed
-   **Settings Tab:** No settings.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"render_interactive_canvas"`.
    -   `description`: `"Render an interactive canvas with HTML source to the user interface. The HTML source can include forms, games, visualizations, or any other interactive content."`.
    -   The `parameters` consists of properties such as `htmlSource`, `canvasWidth`, and `canvasHeight` with `type`, and `description`.
    -   The overview tab provides three example query: `create a form with a text Input and a submit button`, `render a simple tictactoe game`, and `render a smiley face in SVG in the interactive canvas`.
-   **Source Code:** The full source code of the javascript to render an interactive canvas.

### 5. Render Chart

-   **Description:** Generate a Chart.js chart.
-   **Functionality:** Enables the AI to create and display various types of charts based on data provided in the prompt.
-   **Configuration:** No API Keys needed
-   **Settings Tab:** No settings.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"render_chart"`.
    -   `description`: `"Generate a Chart.js chart."`.
    -   The `parameters` consists of properties such as `chartType`, `title`, `data`, and `options` with `type`, and `description`.
    -   The overview tab provides two example query: `create a bar chart with the following data: labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"], data: [12, 19, 3, 5, 2, 3]`, and `render a pie chart with these categories: ["Electronics", "Fashion", "Home & Garden", "Toys", "Sports"], values: [25, 15, 20, 10, 30]`.
-   **Source Code:** The full source code of the javascript to generate a chart.

### 6. Perplexity Search

-   **Description:** Search for information from the internet using Perplexity.
-   **Functionality:** Allows the AI to search for up-to-date information, providing different models.
-   **Configuration:**
    -   Requires a Perplexity API key.
-   **Settings Tab:**
    -   **Perplexity API Key (*):** A text input field to enter the Perplexity API Key, with link to Perplexity API key page.
    -   **Model:** A dropdown menu to select the model, with options such as `llama-3.1-sonar-small-128k-online`.
    -   **System Message:** A text input field to set the system message. A recommendation here is `Be precise and concise`.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"search_via_perplexity"`.
    -   `description`: `"Search for information from the internet using Perplexity."`.
    -   The `parameters` consists of properties such as `keyword` with `type`, and `description`.
    -   The overview tab provides two example query: `What's the gold price?`, and `How's the weather at HCMC at the moment?`.
-   **Source Code:** The full source code of the javascript to search via Perplexity.

### 7. Stable Diffusion v2 Image

-   **Description:** Generate images using Stable Diffusion based on a text description. Adhere to guidelines such as avoiding specific content.
-   **Functionality:** Allows users to create images with clear instruction.
-   **Configuration:**
    -   Requires a StabilityAI API Key.
-   **Settings Tab:**
    -   **StabilityAI API Key (*):** A text input field to enter the StabilityAI API Key, with link to StabilityAI keys page.
    -   **Width of the image (min: 320, max: 1536):** Dropdown menu to select the number from `512` to `1024`.
    -   **Height of the image (min: 320, max: 1536):** Dropdown menu to select the number from `512` to `1024`.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"image_generation_via_stable_diffusion"`.
    -   `description`: `"Generate images using Stable Diffusion based on a text description. Adhere to guidelines such as avoiding specific content."`.
    -   The `parameters` consists of properties such as `prompt`, `width`, and `height` with `type`, and `description`.
    -   The overview tab provides three example query: `Create an image of a majestic lion standing proudly on a cliff overlooking a vast savanna at sunset.`, `Generate a vibrant cyberpunk cityscape illuminated by neon signs and bustling with activity.`, and `Draw a photorealistic portrait of a woman with fiery red hair and emerald green eyes.`.
-   **Source Code:** The full source code of the javascript to generate images using Stable Diffusion.

### 8. Stable Diffusion v3 Image

-   **Description:** Generate images using Stable Diffusion v3 based on a text description. Adhere to guidelines such as avoiding specific content.
-   **Functionality:** Allows users to create images with clear instruction.
-   **Configuration:**
    -   Requires a StabilityAI API Key.
-   **Settings Tab:**
    -   **StabilityAI API Key (*):** A text input field to enter the StabilityAI API Key, with link to StabilityAI keys page.
    -   **Format of the generated image:** A dropdown menu to select image format, such as png, jpeg, and webp.
    -   **Aspect ratio of the generated image:** A dropdown menu to select ratio, such as `1:1`, `4:3`, and `16:9`.
    -   **Model to use for generation:** A dropdown menu to select model, such as `sd3-large`.
    -   **Negative prompt:** A text input field to enter negative prompts, such as `shadow` and `complex`.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"image_generation_via_stable_diffusion_3"`.
    -   `description`: `"Generate images using Stable Diffusion v3 based on a text description. Adhere to guidelines such as avoiding specific content."`.
    -   The `parameters` consists of properties such as `prompt` with `type`, and `description`.
    -   The overview tab provides three example query: `Create an image of a majestic lion standing proudly on a cliff overlooking a vast savanna at sunset.`, `Generate a vibrant cyberpunk cityscape illuminated by neon signs and bustling with activity.`, and `Draw a photorealistic portrait of a woman with fiery red hair and emerald green eyes.`.
-   **Source Code:** The full source code of the javascript to generate images using Stable Diffusion v3.

### 9. Image Search

-   **Description:** Search for images from the internet in real-time using Google Search.
-   **Functionality:** Allows the AI to access image data from the web with user queries, provide more details about the image.
-   **Configuration:**
    -   Requires a Google Custom Search Engine ID and API Key.
-   **Settings Tab:**
    -   **Search Engine ID (*):** This is the unique identifier for your Google Custom Search Engine. User can follow this pattern `03b41cca8970b5458c`.
    -   **Search Engine API Key (*):** This is your Google Custom Search API key. A long string of alphanumeric characters. For instance, `AIzaSyDIaJqTfPYwGsGCwUvdQkQ-08o9z24`.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"search_images_via_google"`.
    -   `description`: `"Search for images from the internet in real-time using Google Search."`.
    -   The `parameters` consists of properties such as `keyword` with `type`, and `description`.
    -   The overview tab provides one example query: `Show me a cute cat picture`.
-   **Source Code:** The full source code of the javascript to search images via Google Search.

### 10. Web Page Reader

-   **Description:** Read the text content from a web URL.
-   **Functionality:** Read the text in the URL.
-   **Configuration:**
    - Requires Plugin Server.
    -Important notes is displayed: `This plugin requires a plugin server to be set up. Learn how to set up a plugin server here (open-source)`. `Long web pages may results in long response and consume more tokens or exceed the maximum context length. This plugin is best used for short articles or blog posts.
-   **Settings Tab:**
    -  **Plugin Server (*):** A text input field to enter Plugin Server.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"read_web_page_content"`.
    -   `description`: `"Read the content of a web page via its URL."`.
    -   The `parameters` consists of properties such as `url` with `type`, and `description`.
    -   The overview tab provides one example query: `summarise this article https://www.cnbc.com/2024/03/15/ceo-of-top-ocean-freight-carrier-hapag-lloyd-on-global-economy-demand.html`.
-   **Source Code:** The full source code of the javascript to retrieve content from web page via its URL.

### 11. Market News

-   **Description:** Fetches market news articles from Alpha Vantage. This plugin automatically displays the fetched news.
-   **Functionality:** Provides up-to-date financial information.
-   **Configuration:**
    -   Requires an Alpha Vantage API key.
-   **Settings Tab:**
    -   **Alpha Vantage API Key (*):** A text input field to enter the Alpha Vantage API Key, with link to Alpha Vantage API keys page.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"fetch_market_news_sentiment"`.
    -   `description`: `"Fetches market news articles from Alpha Vantage. This plugin automatically displays the fetched news."`.
    -   The `parameters` consists of properties such as `searchMode`, `searchTerms`, `time_from`, `time_to`, `tickers`, and `topics` with `type`, and `description`.
    -   The overview tab provides three example query: `Give me market news about Apple stock`, `Show me the latest news about Bitcoin`, and `Give me news about the IPO and earnings in the finance sector from last week`.
-   **Source Code:** The full source code of the javascript to fetch market news articles from Alpha Vantage.

### 12. Javascript Interpreter

-   **Description:** Execute a Javascript code snippet that evaluates to a readable value or a Promise. Use this function with caution.
-   **Functionality:** Provides Javascript interpreter and run the code in the environment.
-   **Configuration:** No API Keys needed
-   **Settings Tab:** No settings.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"execute_javascript"`.
    -   `description`: `"Execute a Javascript code snippet that evaluates to a readable value or a Promise. Use this function with caution."`.
    -   The `parameters` consists of properties such as `code` with `type`, and `description`.
    -   The overview tab provides two example query: `Send a request to the GitHub public API`, and `What is the current time?`.
-   **Source Code:** The full source code of the javascript interpreter.

### 13. Mermaid Diagram

-   **Description:** Generate and render diagrams using the Mermaid.js library (version 10.x). This can be used to render various types of diagrams, including Flowchart, Sequence Diagram, Class Diagram, etc..
-   **Functionality:** Generate diagrams.
-   **Configuration:** No API Keys needed
-   **Settings Tab:** No settings.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"render_mermaid_diagram"`.
    -   `description`: `"Generate a diagram using Mermaid.js (version 10.x). This can be used to render various types of diagrams, including Flowchart, Sequence Diagram, Class Diagram, etc."`.
    -   The `parameters` consists of properties such as `title`, and `source` with `type`, and `description`.
    -   The overview tab provides two example query: `render a state diagram of a simple traffic light system`, and `render a sequence diagram of a simple message exchange`.
-   **Source Code:** The full source code of the javascript to render mermaid diagram.

### 14. Azure AI Search (Cognitive Search)

-   **Description:** This plugin connects TypingMind to your training data in Azure AI Search (Cognitive Search).
-   **Functionality:** Azure AI Search the internal training data for relevant information
-   **How to Use:** When the user asks the AI a question but the AI does not have the answer, the AI will query the training data in Azure AI Search to find the answer. Sometimes, you need to ask the AI to specifically search from the training data if the AI does not do it automatically.
-   **Configuration:**
    - Needs to have an Azure AI Search service and an index with training data.
-   **Settings Tab:**
    -   **Search Service Name (*):** Find this in the "Azure AI Services" section in the Azure portal.
    -   **Index Name (*):** Find this in "Search managements" -> "Indexes" page in the Azure portal.
    -   **Query Key (*):** Find this in "Settings" -> "Keys" page in the Azure portal.
    -   **API Version:** The field contains the URL for version of API, with a link for Microsoft website.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"query_training_data"`.
    -   `description`: `"Search the internal training data for relevant information. When the user asks you something."`.
    -   The `parameters` consists of properties such as `query` with `type`, and `description`.
    -   The overview tab provides two example query: `search from training data for the latest refund policy`, and `who is the founder of the company (search from training data)`.
-   **HTTP Action Tab:** The tab shows the POST method.
-   **Source Code:** The full source code of the javascript to query Azure AI Search data.

### 15. Slack Webhook Message Notifier (OAuth)

-   **Description:** This function sends an authorized user's message to a specific Slack channel via an HTTP action.
-   **Functionality:** It sends user's message to a Slack channel.
-   **How to Use:** Has two options: Send a summary of this document to my Slack channel, and Send a summary of my document to my Slack channel with <<Attach a document file>>.
-   **Configuration:**
    - Requires a webhook URL from Slack.
-   **Important notes:** You need to enable Slack Webhook URL from Slack.
-   **Settings Tab:**
    - A text input field to enter the Slack Webhook URL (*).
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"send_message_to_slack_channel_with_webhook"`.
    -   `description`: `"This function sends a message to a Slack channel via an incoming webhook"`.
    -   The `parameters` consists of properties such as `message` with `type`, and `description`.
-   **Source Code:** The full source code of the javascript to send user's message to a Slack channel.

### 16. Google Calendar (OAuth)

-   **Description:** Return the next 10 events in the current user Google's calendar starting from a specific time.
-   **Functionality:** Return the events from Google Calendar
-   **Important notes:** Give AI read-only access to your Google Calendar.
-   **OauthNotes:** TypingMind is a static web app intended for single user uses, which means you will need to provide your own OAuth client and the authorization/authentication flows are all performed in the client side. We recommend using [Server Plugins](/) for more convenience way to use OAuth 2.0 authentication in your plugin.
-   Set up OAuth Credentials.
-   Settings Tab
    - Number of events to return from the Google Calendar API (default: 10)
    - **Max Results:** Number input here.
- Auth Tab
    -  Set up OAuth Credentials for the Plugin
      -OAuth Callback URL for this plugin: This URL is only valid for the current plugin.  (This will show the `https://www.typingmind.com` URL)
      -OAuth Client ID : Get the client ID from your OAuth provider. ( A text box here)
      -OAuth Client Secret : Get the client secret from your OAuth provider. (A text box here)
      -Click "Save Credentials"
      -Authenticae to use this plugin. (Click Authenticate Now to get permission)
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"get_google_calendar_events"`.
    -   `description`: `"Return the next 10 events in the current user Google's calendar starting from a specific time"`.
    -   The `parameters` consists of properties such as `timeMin` and `timeMax` with `type`, and `description`.
-   **HTTP Action Tab:** The tab shows the GET method.
-   **Source Code:** The full source code of the javascript to retrieve calendar events.

### 17. Firecrawl Web Page Reader

-   **Description:** Retrieves the content of a web page by scraping it using the Firecrawl API.
-   **Functionality:** Firecrawl Web Page.
-   **Configuration:**
    - Requires Firecrawl API Key. Set up your Firecrawl API Key and Authenticate:
      -Firecrawl API requires an API key for access.
      -Update the plugin's user settings.
-   **Settings Tab**
     - **Firecrawl API Key (*):** A text input field to enter Firecrawl API Key
      - Select either "only Main Content" or  "Full Webpage Content" from the dropdown.
-   **Important Notes:** There are rate limits for API requests depending on different pricing plans.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"get_web_page_content_scraped_by_firecrawl"`.
    -   `description`: `"Retrieves the content of a web page by scraping it using the Firecrawl API."`.
    -   The `parameters` consists of properties such as `pageUrl` with `type`, and `description`.
-   **HTTP Action Tab:** The tab shows the POST method.
-   **Source Code:** The full source code of the javascript to retrieve web page content.

### 18. Send email with Zapier

-   **Description:** This plugin allows the AI assistant send email to specific email addresses with custom subject and content using Webhook by Zapier.
-   **Functionality:** Send email.
-   **Important Notes:** This plugin requires a webhook URL from Zapier.
-   **Settings Tab**
    - A text input field to enter Zapier webhooks, name :Webhooks URL (*)
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"send_email_with_zapier"`.
    -   `description`: `"Send an email to a specific email address with title and text content using Zapier webhook."`.
    -   The `parameters` consists of properties such as `email`, `subject`, and `content` with `type`, and `description`.
-   **HTTP Action Tab:** The tab shows the POST method.
-   **Source Code:** The full source code of the javascript to send email with Zapier.

### 19. PowerPoint Generator

-   **Description:** Generate a PowerPoint file and return the URL for downloading it.
-   **Functionality:** Generate a PowerPoint file.
-   **Configuration:** No API Keys needed, Requires a plugin server.
-   Settings Tab
    - **Plugin Server (*)** A text input field to enter the URL of the plugin server
    - **Slide Layout** (Dropdown. Default: LAYOUT\_WIDE).
    - **Title Font Size** ( A textbox here)
    - **Header Font Size** ( A textbox here)
    - **Body Font Size** ( A textbox here)
    - **Font Family** (Dropdown. Default: Calibri)
    - **Background Color** ( A textbox here)
    - **How to Deploy Plugins Server on Render**.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"generate_powerpoint_file"`.
    -   `description`: `"Generate a PowerPoint file and return the URL for downloading it. If the download url is not present, it means something is wrong with the plugin server's API key"`.
    -   The `parameters` consists of properties such as `sections` with `type`, and `description`.
-   **HTTP Action Tab:** The tab shows the POST method.
-   **Source Code:** The full source code of the javascript to generate Powerpoint file.

### 20. Word Generator

-   **Description:** Generate a Word document based on the given sections, title, header, and footer, and return the URL for downloading it. If the download url is not present, it means something is wrong with the plugin server's API key.
-   **Functionality:** Generate a Word document
-   **Configuration:** No API Keys needed, Requires a plugin server.
-   Settings Tab
    - **Plugin Server (*)** A text input field to enter the URL of the plugin server
    It Supports:
         -Multiple sections with hierarchical numbering format.
         -Adding header, footer, and page number.
         -Adding table.
         -Adding list with bullet points.
         -Adding table of content.
         -Adding page break.
-   **Spec Tab:** The tab displays `name`, `description`, and `parameters`.
    -   `name`: `"generate_word_file"`.
    -   `description`: `"Generate a Word document based on the given sections, title, header, and footer, and return the URL for downloading it. If the download url is not present, it means something is wrong with the plugin server's API key."`.
    -   The `parameters` consists of properties such as `sections` with `type`, and `description`.
-   **HTTP Action Tab:** The tab shows the POST method.
-   **Source Code:** The full source code of the javascript to generate word document.

</PLUGINS_BUILT_IN>

<CHAT_WITH_DOCUMENTS_FEATURE>

## Chat with Documents Feature

The "Chat with Documents" feature in TypingMind allows users to upload documents and engage in conversations with the AI about their content. The AI can extract information, summarize, analyze, and answer questions based on the uploaded documents.

### Uploading Documents

1. **Open a Chat Session:** Start or open an existing chat session in TypingMind.
2. **Locate the "Attachment" Button:** In the message input area (where you type your messages), find the paperclip icon.
3. **Click the "Attachment" Button:** Clicking this button opens a standard file dialog.
4. **Select Files:** Browse your computer and select the document(s) you want to upload. TypingMind typically supports a variety of file types, including:
    - PDF (.pdf)
    - DOCX (.docx)
    - TXT (.txt)
5. **Click "Open":** After selecting the file(s), click the "Open" button in the file dialog.
6. **File Upload and Display:** TypingMind will upload the selected document(s) and display them in the chat interface as attachments.
    - Each uploaded document is displayed as a separate attachment.
    - The attachment displays the file name and icon.
    - The attachment displays the character count of the document.
    - The attachment displays the token count of the document, prefixed with "~" character.
    - The attachment displays the estimated cost of processing the document, enclosed in parentheses and prefixed with a currency symbol (e.g., ($0.008)).

### Chatting with the AI About the Documents

1. **Compose Your Message:** In the message input field, type your question or prompt related to the uploaded document(s).
    - Be as specific as possible in your question to guide the AI's analysis.
    - You can ask the AI to:
        - Summarize the document.
        - Extract specific information.
        - Answer questions based on the content.
        - Analyze the document for patterns or insights.
2. **Send Your Message:** Click the "Send" button to send your message to the AI.
3. **AI Processing and Response:** The AI will analyze the uploaded document(s) and generate a response based on your question.
    - The AI's response will be displayed in the chat interface, just like a normal conversation.
    - The AI may cite specific passages from the document to support its answer.
4. **Example Interaction:**
    - **User:** "what's the refund policy?"
    - **AI:** "Based on the Terms of Service document, here is the refund policy for TypingMind: All purchases are refundable within 14 days of purchase, no questions asked. This applies to: Regular TypingMind purchases, Custom Deployment subscriptions..."

### Additional Details

- **Token Usage:** Uploading and processing documents consumes tokens. The token count for each document is displayed in the chat interface.
- **Cost Estimation:** TypingMind estimates the cost of processing the document based on the token count and your AI model's pricing.
- **Document Limits:** There may be limits on the number of documents you can upload per chat session, the size of individual documents, or the total number of tokens that can be processed.
- **AI Model Compatibility:** Some AI models may be better suited for processing documents than others. Experiment with different models to find the best performance.
- **Data Security:** TypingMind processes documents securely. Ensure you are familiar with TypingMind's data privacy policies.

</CHAT_WITH_DOCUMENTS_FEATURE>

<ARTIFACT_PANEL_FEATURE>

## Artifact Panel Features

The Artifact Panel in TypingMind is a dedicated, interactive sidebar designed to display and manage the output of plugins, particularly rich content like Interactive Canvas results (HTML/CSS/JS code). It provides users with tools to preview, interact with, copy, and switch between different versions of plugin-generated content.

### Artifacts Panel Interface Overview

The Artifacts panel typically appears as a slide-out sidebar on the right side of the chat interface. It is visually distinct from the main chat area, often using a different background color or a subtle border to separate it.

The Artifacts panel generally consists of the following elements:

- **Panel Header:**
    - **Panel Title:** Displays the title of the panel, which is typically a label indicating the type of content displayed. Example: “Interactive Canvas”. When multipe object was created, it will show "Artifacts".
    - **Dropdown Menu:** A dropdown menu might display here. When the type is the same, for example, multiple Interactive Canvas was created, it can be used to select the right object to show.
    - **Pin Icon:** An icon that pins the artifact. Hovering on the icon will show "Unpin". Pin the artifact will keep it on top.
    - **Close Icon:** An icon that remove the artifact from the panel. Hovering on the icon will show "Remove from panel". The object in the chat history will not be removed.
- **Artifact Content Area:**
    - **Preview Mode:**
        - Displays a visual representation of the artifact's content.
            - For interactive canvases: The HTML code is rendered as a live, interactive preview.
            - The preview area respects the specified dimensions (width and height) of the canvas, providing an accurate representation of the content.
        - Functionality:
            - Users can interact directly with the rendered content (e.g., click buttons, fill out forms, play games).
    - **Code Mode:**
        - Displays the underlying code that generates the artifact.
            - For interactive canvases: The HTML, CSS, and JavaScript code that define the canvas is shown in a text editor.
        - Syntax Highlighting: The code is formatted with syntax highlighting to improve readability.
        - Copy to Clipboard: A "Copy Code" button (typically a clipboard icon) allows users to quickly copy the code to the clipboard. When clicked, a tooltip "Copied!" shows.
            - Function: Copies all the code in the code mode and stores for user.
    - **View Tabs**: Toggle between `Preview` mode or `Code` mode, which can be used for all kind of objects
    - **Version Selection**: If there are multiple version of this Artifacts, the select box is enabled for user to select.
- **Artifact-Specific Actions Toolbar:** A toolbar located above or below the preview area provides access to common actions. The action icons will only take up the content space, and the rest will be hidden.
    - **""View in artifacts panel"" Text:** Once an object is created, a line of text "interactive Canvas - View in Artifacts" will show up. Clicking on it will bring the object to focus in the Artifacts panel.
    - **Copy the content**: Clicking the "Copy" icon will copy the Javascript HTML code. After the copy, there will be a popup text `Copied!`.
        - This button only shows at `Code` mode.
        - Use copy the code to other place
    - **Open in a new window**: Clicking the new window button to view in a popup window.
        - This button is to open a new popup to show the entire object.
    - **Show in artifacts panel**
    - **Artifact-specific Actions:** The three dots "More options"
        - Remove
        - Fork chat from here

### Using Artifacts

The Artifacts panel provides several ways to utilize the generated content:

1. **Previewing Artifacts:**
    - Click the "Preview" tab to show the content.
    - The content in the Artifacts Panel is based on its type.
2. **Accessing and Copying Code:**
    - Click the "Code" tab to display the code of the object.
    - By click the `Copy` button, you can copy the code.
    - Use the content anywhere you want.
3. **Opening Artifacts in a Separate Window:**
    - An "Open in separate window" icon (typically a new window icon) is available on the artifact's card.
    - Clicking this icon opens the artifact's content in a new browser window or tab.
    - This is particularly useful for interactive canvases, as it allows the user to view and interact with the content in a full-screen environment.
4. **Navigating artifact versions:**
    - If multiple versions of the artifact is created, the user can click through `<` and `>` to move from the list, or select from the dropdown version list.
    - After the selection, the content in the panel will shows off, according to the version selected.

</ARTIFACT_PANEL_FEATURE>

<CANVAS_EDITOR_FEATURE>

## Canvas Editor Features

The Canvas Editor in TypingMind provides a rich, in-line editing experience for modifying AI-generated content. This feature allows users to refine and customize text directly within the chat interface, offering formatting options, rewriting suggestions, and raw Markdown editing capabilities.

### Accessing the Canvas Editor

There are two primary methods for accessing the Canvas Editor:

1. **Via message actions**: When the AI generates a message, the user can hover on it to trigger the quick actions, and then click the `Edit in Canvas` button to trigger the Canvas Editor.
2. **Directly after initial rendering**

### Canvas Editor Interface Overview

The Canvas Editor occupies the main content area (right side), replacing the standard chat display with a dedicated editing environment.

The Canvas Editor interface typically consists of the following elements:

- **Editing Toolbar (Top):** A horizontal toolbar located at the top of the Canvas Editor, providing access to common editing actions and settings.
    - **Model Selection:** Displays the currently selected AI model (e.g., "GPT-4o").
    - **Temperature Selection:** Select the temperature of the model.
    - **Format Selection:** Displayed on the left side of the toolbar, with `Normal Text` as the placeholder, allowing the user to change the current text type. The options including:
        - `Normal text`
        - `Heading 1`
        - `Heading 2`
        - `Heading 3`
        - `Bullet List`
        - `Numbered List`
        - `Quote`
        - `Code`
    - **Rewrite**:
        - When user click on a text and select `Rewrite`, this will trigger the `Rewrite` action of the text.
        - The drop down option includes: `Make it shorter`, `Make it longer`, `Make it friendlier`, `Make it more professional`.
        - It is displayed as a blue button
    - **Edit Raw**:
        - Toggles to the raw markdown content editor, where user can directly edit the content.
        - It is displayed as a grey button
        - Refer to the Edit Raw Mode section.
    - **Close button**: On the top right corner, user can press it to close Canvas Editor.
- **Text Input Area (Main Content Area):** The main content area displays the text of the selected message in an editable format.
    - **Visual Formatting:** The text is displayed with visual formatting (e.g., headings, bold, italics) to reflect the underlying Markdown or HTML structure.
    - **Direct Editing:** Users can directly edit the text by clicking on it and typing.
    - **Cursor and Selection:** The text input area supports standard cursor movement, text selection, and copy/paste operations.
    - **Scrollbar**: If the content is too big, a scrollbar will show up to let the user scroll.
- **"Edit message" Bottom Toolbar**: A bar located at the bottom, it includes quick tools such as:
    - Formatting actions: Users can use `@`, attachment actions, etc.
    - `Edit in canvas` button: User can click on this to re-open the Canvas mode.
    - `Update` button: After the change, user can click the `Update` button to confirm the update.
    - `Cancel` button: User can also choose to cancel the action.
- **Code actions**:

### Interacting with the Canvas Editor

1. **Formatting Text:**
    - Users can apply formatting to selected text by using dropdown of the text format.
        - A short list will show for user to select.
        - After the selection, the selected text will show as the format.
2. **Rewriting Text:**
    - Users can select part of the text, then click on "Rewrite" button and select an option:
        - Make it shorter
        - Make it longer
        - Make it friendlier
        - Make it more professional
    - Or they can select `Enter your prompt`, a popup is shown to get the rewrite content. After enter the content, press enter to submit.
    - After the action, it will change the selected text with new content, then show off.
    - After the text content has been replaced, a green flash animation is displayed.
3. **Edit Raw Mode:**
    - Clicking the "Edit Raw" button toggles the Canvas Editor into a raw Markdown editing mode.
        - The formatted content will be displayed in the editing box
    - After edit the code, user can click "Update" button to apply the changes
    - After the raw content has been changed, a green flash animation is displayed.
    - Actions after the `...` button:
        - **Toggle Bold**: Toggle selected code text become bold.
        - **Toggle Italic**: Toggle selected code text become italic.
        - **Undo changes**: Undo the code action.
        - **Redo changes**: Redo the code action.
        - **Edit Raw**: Directly edit the code.
        - **Copy Markdown**: Copy the code.
        - **Copy Formatted Text**: Copy with current format.
        - **Download Markdown**: Open a save dialog for user to save.
- **Applying Changes:**
    - After edit the message, user can click the `Update` or `Cancel` button to apply or discard the changes.
        - Click `Update` will apply to both editor, and code result.
        - Click `Cancel` will discard the change.

</CANVAS_EDITOR_FEATURE>

<MULTI_PROFILE_FEATURE>
## Multi-Profile Feature

The Multi-Profile feature in TypingMind allows users to create and manage multiple distinct profiles, each with its own set of personal information, custom instructions, and API keys. These profiles can then be quickly switched to tailor the AI's behavior and responses to different contexts or scenarios (e.g., personal, work, specific clients).

### Key Benefits

- **Contextual AI:** Ensures the AI understands the user's role and situation.
- **Personalization:** Tailors the AI's behavior to specific user preferences.
- **Security:** Allows the secure management of multiple API keys.

### Accessing and Managing Profiles

1.  **Locate the User Profile Icon:** Click the user profile icon located in the bottom left-hand corner of the sidebar, or top left corner when inside the conversation. This action opens the user menu.
2.  **Selecting a Profile:** The profile popup lists all existing profiles. Each profile displays:
    *   **Profile Name:** The name assigned to the profile.
    *   **Profile Picture:** The user's profile picture.
    *   **Selection Indicator:** A green check mark in a green circle indicates the currently active profile.
    *   **Edit Profile Icon:** A pencil icon, used to edit the setting of the profile.
    *   **Delete Profile Icon:** A trashcan icon, used to remove the profile.
3.  **Switching Profiles:** Click on a profile to select it. A green confirmation banner will appear at the top of the screen to confirm the selection.
    *   The banner text is "You are now using profile \"[Profile Name]\"".

### Creating a New Profile

1.  **Open the Profile popup:** (As described above).
2.  **Click the "Add Profile" Tile:** Click the tile labeled "Add Profile", which contains a "+" icon.
3.  **"Add Profile" Form Overview:** The "Add Profile" form is structured to guide users through the configuration of a new profile. It includes the following key sections:
    *   **Back to profiles:** Click to navigate back to profile selection.
    *   **Form header:** "Add Profile".
    *   **Form description:** "The AI assistant will remember your information on all future chats."
    *   **Your Name:**
        *   Purpose: Assign a name to the user.
        *   Input Type: Text field.
        *   Placeholder Text: "e.g., John".
        *   Requirement: Optional.
    *   **Profile Image URL:**
        *   Purpose: Provide a URL to an image that will be used as the icon for the profile.
        *   Input Type: Text field.
        *   Placeholder Text: "https://...".
        *   Requirement: Optional.
    *   **Your Information:**
        *   Purpose: Enter any information you want the AI assistant to remember about you here.
        *   Input Type: Text area (multi-line text field).
        *   Example Text: "e.g., I am a sales manager, I live in New York, I love playing guitar...".
        *   Requirement: Optional.
    *   **Custom Instruction:**
        *   Purpose: Let the AI know how to respond when this profile is used.
        *   Input Type: Text area (multi-line text field).
        *   Example Text: "e.g., Respond casually. Use professional tone. Use short responses...".
        *   Requirement: Optional.
    *   **Assign API keys for this profile:**
        *   Function: Allows users to define a API Key for each type of engines, including OpenAI, Anthropic and Gemini. This is recommended if there is a shared account for different functions.
        *   Input Type: Toggle switch.
        *   Functionality: When enabled, the following parameters can be modified specifically for the selected model.
        *   Requirement: Optional. If disabled, the model will use the global keys defined in the Cloud Sync Settings.
        *   Click to the link `Get API key here` will navigate to corresponding page for API keys.
        *   `Save` will only save the current input API Key.
    *   **Done:** Clicking this button will close the "New Profile" configuration and save the changes.

### Editing an Existing Profile

1.  **Open the Profile popup:** (As described above).
2.  **Click the "Edit" Icon:** Locate the profile you want to edit and click the pencil (edit) icon.
3.  **Modify the Settings:** Make the desired changes to the profile's settings. The form is the same as described above.
4.  **Click the "Done" Button:** Click the "Done" button to save the changes.

### Deleting a Profile

1.  **Open the Profile popup:** (As described above).
2.  **Click the "Delete" Icon:** Locate the profile you want to delete and click the trash can (delete) icon.
3.  **Confirmation Prompt:** A confirmation prompt is displayed to prevent accidental deletion.
4.  **Confirm Deletion:** Confirm the deletion.
</MULTI_PROFILE_FEATURE>

<PROMPT_CACHING_FEATURE>
## Prompt Caching Feature

The Prompt Caching feature in TypingMind is designed to optimize token usage and reduce API costs by storing and reusing the results of frequently used prompts. When enabled, TypingMind caches the AI's responses to specific prompts, allowing subsequent requests for the same prompts to be served from the cache instead of being reprocessed by the AI model.

### Key Benefits

*   **Reduced Token Usage:** By serving responses from the cache, TypingMind can significantly reduce the number of tokens consumed, resulting in lower API costs.
*   **Faster Response Times:** Cached responses are served instantly, eliminating the need to wait for the AI model to generate a new response.
*   **Improved Performance:** By reducing the load on the AI model, prompt caching can improve overall application performance and responsiveness.

### Enabling Prompt Caching
Prompt caching is enabled on a per-model basis:
1. **Access the Model Settings:**
    * There are two ways to access the model parameters settings:
        * Refer to the instructions described on "Accessing Model Parameter Settings" section on `<MODEL_PARAMETERS_SETTINGS>`.
2. **Override Global Model Parameters:** Ensure that the "Override Global Model Parameters" toggle switch is enabled.
3. **Locate the "Prompt Caching" Toggle Switch:** Scroll down to the "Prompt Caching" section.
4. **Enable Prompt Caching:** Click the toggle switch to enable prompt caching for the selected model.
    * **Enabled State:** When the toggle is switched to the right, it is typically displayed with a blue color.
    * **Disabled State:** When the toggle is switched to the left, it is typically displayed in gray.
5. **Considerations**:
    * A message show up: `Prompt caching helps save token costs for long conversations. Enabling this will incur additional tokens when initiating the cache for the first time, but it can save many more tokens later, especially for long conversations. Not all models support caching, and some models require a minimum number of tokens for caching to be initiated. Please check with your AI model provider for more information.`

### Prompt Caching behavior

*   When enabled, it store all AI response content to cache. The new user prompt will look for similar content to the new prompt, if there is any, the older content will show up.

### Chat Info: Prompt Caching Status

The "Chat Info" dialog provides information about the prompt caching status in the current chat.
1.  **Accessing the Chat Info Dialog:** In the chat interface, locate the cost display at the top right corner, or in the 3-dots `More Options` button then click on "Chat Info". This will open the Chat Info popup window.
2.  **Locate the "Total Tokens Cached" Field:**
    *It's in the 4th section of the dialog
3.  **Status Indicator:** The "Total Tokens Cached" field displays the following information:
    *   **Cached information:** It will show the tokens cached for the chat.
    *  If it is caching for the first time, it show (Inactive), and a note show, saying `Caching is supported but not yet activated for this chat. Some models requires a minimum number of tokens to be used before caching is activated.`

### Additional Details

*   The total tokens cached is also displayed in the chat info dialog
*   Not all models support caching.
*   Some models require a minimum number of tokens for caching to be initiated.
*   If you're in a chat session, and you switch to a different model, then the data won't get cached, even though `prompt caching` is turned on in the settings. Caching will apply only when the AI assistant starts from scratch.
</PROMPT_CACHING_FEATURE>

<FAQS>
[
  {
    question: `Is this app free?`,
    answer: `TypingMind.com is free to use with some basic features. You will need to have a working OpenAI API Key in order to use the app. When you use the OpenAI API Key, you pay directly to OpenAI for the amount of credits/tokens you use. TypingMind.com has premium features that can be unlocked with a one-time purchase.`,
  },
  {
    question: `Is the License Key one-time purchase? Do I need to renew it?`,
    answer: `Yes, license key is one-time purchase and valid forever. It is not a subscription and you don't need to renew it. You will also be provided with an offline static web app (self-host) after you purchase so you can self-host and use the app anytime anywhere you want. Enjoy!`,
  },
  {
    question: `Where can I get an OpenAI API Key?`,
    answer: `You can signup directly with OpenAI at https://platform.openai.com/signup`,
  },
  {
    question: `Do I need to pay for ChatGPT Plus ($20/month) to use TypingMind.com?`,
    answer: `No! A ChatGPT Plus subscription is not needed. You just need to have an OpenAI's API Key. You can see more info on how to get one here: https://openai.com/blog/openai-api`,
  },
  {
    question: `Do I need to pay for OpenAI for a ChatGPT API Key?`,
    answer: `Yes. You need to have an OpenAI account and a valid API key to use ChatGPT. We don't sell API keys.`,
  },
  {
    question: `How does this app work?`,
    answer: `This is a static web app, it doesn't have any backend server. When you enter your API key, it will be stored locally and securely on your browser. All API requests are sent directly from your browser to OpenAI server to interact with ChatGPT. Think of this as a HTTP client for your ChatGPT API with a lot of convenience features.`,
  },
  {
    question: `How is the API key handled?`,
    answer: `Your API is safe and stored locally on your device. This is a static app, which means that it doesn't have a backend. All the data is stored in your browser's local storage. Requests to Open AI's API is sent directly from your current browser (check the Network tab in your console if you want to see it).`,
  },
  {
    question: `Is it ok to give my OpenAI API Key to TypingMind? Does OpenAI allow this use case?`,
    answer: `Yes. TypingMind only stores your API Key locally and never sends your API Key anywhere. OpenAI allows use cases where the API key is stored locally in the user's device. You can see this official response from OpenAI's staff here: https://community.openai.com/t/openais-bring-your-own-key-policy/14538/4`,
  },
  {
    question: `Is my API Key encrypted in local storage?`,
    answer: `TypingMind offers additional encryption for your API Key. You can enable encryption with a password by clicking the "OpenAI API Key" button in the sidebar and selecting "Encrypt API key...". Your API Key will be encrypted using the AES algorithm provided by the open-source CryptoJS library (https://github.com/brix/crypto-js). TypingMind only provides an encryption feature for your API key. Chat messages, prompts, AI agents, and other elements are stored using the standard local storage of your browser, which may or may not include encryption, depending on your browser. The encryption process are done entirely locally on your device, there is no backend server. If you use TypingMind on multiple devices, you will need to encrypt your API key on all of them, you can also set different passwords on different devices.`,
  },
  {
    question: `What's the difference between ChatGPT Plus and ChatGPT API via TypingMind?`,
    answer: `Under the hood, ChatGPT Plus and ChatGPT API offer the same model and the same quality. You can view this on their official announcement here: https://platform.openai.com/docs/guides/chat. The initial system instruction can be a little bit different, which can be configured to make the AI output different messages from time to time.`,
  },
  {
    question: `Can I use GPT-4 in TypingMind?`,
    answer: `Yes, you can use GPT-4 in TypingMind via the API access. Check out this article for more info: https://blog.typingmind.com/access-gpt-4-on-typingmind`,
  },
  {
    question: `I have ChatGPT Plus, will it cost me more to use ChatGPT API via TypingMind?`,
    answer: `The ChatGPT API costs soooooo little you won't even notice it. Typical chat conversation is about 1000 characters, which costs ~$0.001. That's less than a cent. You can have thousands of chats and it will only costs you like $1. See official pricing here: https://openai.com/pricing#language-models`,
  },
  {
    question: `How many chats can I have?`,
    answer: `You can have as many chats as you want. The only limit is your OpenAI API key's limit and your browser storage limit (technical term: Local Storage and IndexedDB). Web browser gives you some limited data storage, the actual limit is different for each browser. Typically, you can save thousands of chat conversations without problems, but that's not guaranteed. When the browser storage runs out, you will need to delete old chats to save the new ones. We will provide a separate service to sync and backup your chats soon. Adding the website to your home screen may increase the storage capacity.`,
  },
  {
    question: `How can I sync my chat conversations across devices?`,
    answer: `You can export the chats and import it on another device. You can also enable TypingMind Cloud for seamless syncing across devices. TypingMind Cloud is a free service provided to all paying TypingMind users. You can enable it by clicking the cloud icon at the bottom of the sidebar.`,
  },
  {
    question: `Why does sometimes TypingMind responds differently than the default OpenAI's ChatGPT event with the same prompt?`,
    answer: `TypingMind uses the same underlying model as OpenAI's default chat app. For the same prompt, it can produce different responses each time. The default chat app by OpenAI may also have some initial prompt settings that are different from TypingMind. If you don't get the response you expects, try "Re-generate Response" or tweaking the prompt.`,
  },
  {
    question: `Can I self-host it?`,
    answer: `Yes. After you make a purchase, go to https://www.typingmind.com/self-host-guide to download the static web app and the instruction how to deploy it on your own server. Note that you will only receive the compiled code of the app, the full source code is not available because the app is not open-source. You can deploy the app anywhere without having to update any code or settings.`,
  },
  {
    question: `Do I have access to the full source code if I want to self-host?`,
    answer: `No. The license key only grants you the permission to use and deploy the app on your own server. You do not have permissions to modify or redistribute the code. The full source code is not available for sale as the app is not open-source. You will only receive the compiled code of the app, you can deploy the app anywhere without having to update any code or settings.`,
  },
  {
    question: `What can I customize in the self-host version?`,
    answer: `The static self-host version does not offer any customizations. Check out https://custom.typingmind.com for a custom version of TypingMind that will allow you to customize almost everything.`,
  },
  {
    question: `Is there a MacOS/Windows/Linux app?`,
    answer: `TypingMind is a PWA compatible web app, so you can install it to your device and it will work like a native app. Click the menu of your browser → Install on Home screen.`,
  },
  {
    question: `Is there an Android/iOS/iPad app?`,
    answer: `No, but you can add typingmind.com to your home screen. It works exaclty like an app!`,
  },
  {
    question: `License Key vs. API Key`,
    answer: `License Key is used to activate the premium features of TypingMind.com. API Key refers to OpenAI ChatGPT API Key, and is used to connect to OpenAI's API to interact with ChatGPT. You need an API Key to use the app. The License Key is only needed if you want to use the premium features.`,
  },
  {
    question: `What are the premium features?`,
    answer: `The premium features include: Chat Search History, Access Prompt Library, Integrations, etc. Check the pricing page for the latest details of all the premium features.`,
  },
  {
    question: `Is there an expiration date for the License Key?`,
    answer: `The license key is valid forever.`,
  },
  {
    question: `Can I receive new updates after I buy a license key?`,
    answer: `Depends on the license key you buy. The Premium License Key is valid forever and includes all updates forever.`,
  },
  {
    question: `What are the limitations of the free plans.`,
    answer: `In the free plan, chat history will not be saved. You will be present with a popup every few minutes. Some other features may also be limited.`,
  },
  {
    question: `How many devices/users can I use the License Key on?`,
    answer: `Each license key can be used on 5 devices which is typically enough for 1 user. If you need to use it on for more devices, you can buy a new license keys or add more devices to your existing license key. "Device" is counted based on the number of places where the license key is entered and the chat history is saved for continuous use. For example, if you use the app on Chrome browser on your laptop and also on your phone, that will be 2 devices. Note that the license key and chat history is saved locally per browser, so if you use the app on Chrome and also on Firefox, you will need to enter the license key 2 times, have 2 separate chat histories, and that counts as 2 devices. If you need to use the license key on a new device but have reached the device limit, you can unlink the previous devices first using the License Manager (this is done online, access to the previous devices not needed). This device limit is put in place to avoid license key abuse and pirate.`,
  },
  {
    question: `How do I remove a device from my license? How to access the License Manager?`,
    answer: `At the moment, inactive devices will be revoked automatically after a short time, you don't need anything. In the future versions, you can access the License Manager from the app and manage your devices there.`,
  },
  {
    question: `I have purchased but forget my license key, how can I get it back?`,
    answer: `You can go to https://app.lemonsqueezy.com/my-orders/ to access your license key.`,
  },
  {
    question: `How to use the Team License (Bulk License) Key? How to add new users?`,
    answer: `The Bulk License gives you a License Key that can be shared and used among your team members. Simply share your license key with your team members and they can use it on their devices.`,
  },
  {
    question: `How do I manage the devices that linked to my license key?`,
    answer: `There is no need to manage your devices manually. Our license system works automatically. Inactive devices will be revoked automatically after a short time. We detect unauthorized uses and ask to verify with your purchase email when necessary.`,
  },
  {
    question: `Can I get a refund?`,
    answer: `Yes. We offer a 14-day money-back guarantee. If you're not satisfied, let us know within 14 days and we'll give you a full refund. Request a refund at support@typingmind.com`,
  },
]
</FAQS>

<TEAM_VERSION_GETTING_STARTED>
## Getting Started with TypingMind for Teams

This section outlines the initial steps for setting up and launching a customized AI chat portal using TypingMind for Teams.

Note, the TypingMind for Teams version can sometimes be referenced as different names: TypingMind Custom, TypingMind for Business, TypingMind Team. These are all referring to the same enterprise offering that allows organizations to build their own internal AI chat portals with custom branding, user management, and advanced team collaboration features. This is different than the Personal version of TypingMind, which is designed for individual use and comes with a one-time lifetime license. While the Personal version focuses on individual productivity with features like AI agents and plugins, the Teams version adds organizational capabilities such as user management, custom branding, centralized data control, and advanced security features. The Teams version also typically follows a subscription-based pricing model rather than the one-time payment structure of the Personal version.

### 1. Sign Up for TypingMind Custom

1. **Navigate to TypingMind for Teams:** From the TypingMind application, click on the "Teams" icon located in the left sidebar.
2. **Explore the Landing Page:** Review the TypingMind for Teams landing page, which highlights key features and benefits.
3. **Initiate the Setup Process:** Click on either the "Learn More" button on the main page, or the "Create your AI workspace" button in the bottom navigation.
4. **Begin the Sign-Up Process:** On the TypingMind Custom page, fill in the "Create a new AI workspace" form.
    -   **Form Fields:**
        -   **First name:** A single-line text field for the user's first name.
        -   **Last name:** A single-line text field for the user's last name.
        -   **Work email:** A single-line text field for the user's work email address. A tooltip "Please enter a valid email." shows when invalid values are enter.
    -   **Terms of Service:** A checkbox labeled "I have read and agreed with the Terms of Service and Privacy Policy of TypingMind Custom."
        - The words "Terms of Service" and "Privacy Policy" are hyperlinked.
    -   **Continue Button:** A blue button labeled "Continue ->".
5. **Provide Company Information:** On the next page, provide information about the company.
     -   **Form Fields:**
        -   **Your company name:** A single-line text field for the user's company name.
        -   **Your company size:** Size options include 1-10, 11-50, 51-100, 101-200, 201-1,000, 1,000+.
        - The text input field and selection box with the color white
     -   **Next Button:** A blue button labeled "Next ->".
6. **Customize Chat Portal:** On the next page, customize chat portal settings
     -   **Form Fields:**
        -  **What should your chat portal name be?:** The label for portal name setting, similar to the company name.
        -   **Your brand tagline:** Customize your slogan to make the brand more recognizeable
        -   **Your logo URL (Optional):** Customize the Logo so the audience can easily recongize, and it can improve trust and user engagement. (Must be HTTPS, recommended: 256x256). A light grey text with small characters at the bottom.
     -   **Next Button:** A blue button labeled "Next ->".
7. **Select a Subdomain:** Set up the domain of the chat app
     - **Options**:
        - Select the data center, where business are located, plus any compliance regulations (GDPR, etc). User cannot easily change this. United States (US West) or Europe (Frankfurt).
        - Choose a subdomain for users to access the chat portal, which would be [subdomain].typingmind.cloud. User can set up a custom domain later in the Admin panel.
          - A link is provided underneath `You can set up a custom domain later in the Admin panel.`
     - **Create chat portal:** A blue button labeled "Create chat portal ->".
8. **Email Verification:** After creating the chat portal, the user is redirected to a page indicating that an email has been sent to the provided email address for verification.
    -   **Message Displayed:** "We've sent an email to [email address] Verify your email to start using TypingMind Custom."
    -   **Email Provider Options:** Buttons to open Gmail, Apple Mail, Outlook, or Yahoo Mail.
    -   **Additional Actions:** Buttons to "Back to home" or "Resend verification email."
9. **Verify Email:** In the email, click the provided link to verify the email address.
     - The link navigates to the message saying "Verifying..."
     - If the verification is successful, it navigates to `Onboarding`, with title `Let's get your chat instance ready`, where can start configuring the chat portal

### 2. Configure the Chat Portal

After verifying the email address, you can configure the settings. Here is how to launch a custom AI chat portal with pre-defined settings for your team.

1.  **Setting up the onboarding:** Click the "Get Started" button to initiate the setup.
2.  **Select the AI Providers:**
    *The page's title `Let's get your chat instance ready`. The navigation includes the step list `1/7` to indicate the current steps
    -Enable the `Select AI providers` option.
    -Set the `OpenAI ChatGPT` switch to `On`. User need to add API keys to use OpenAI. The API key should follow this format `sk-*************************************`, where "*" is alphanumeric characters. There is a `save` button to confirm, and also a `Get your API key here` for user to get the API Key in case.
    -To get to the next step, user need to set up either one of the AI providers first.
3.  **Activate your chat instance:**
    * Enable the `Activate chat instance` option
    - The step's name is `2/7`
    - There is the Rocket image on the page, and a blue button that shows `Activate Now`
4.  **Send first messages:**
    * Enable the `Send first messages` option
    - The step's name is `3/7`
    - There is the paper plane image on the page, and a blue button that shows `Send first message`
    - If you have set up all the 3 steps, the right column would display `Ready to Launch`.
5.  **Set up branding & theme:** The step's name is `4/7`
    - **Brand name**: The brand name is defined in the previous step when sign up
    - **Tagline**: Tagline has been defined in the previous step when sign up
    - **Brand logo**: This was entered during sign up, The recommended size is 256x256 and must be an HTTPs.
    - **Sidebar color**: Has a select box for user to customize
      - User can select Custom, then the colors popup will shows up.
      - User can select from `Teal`, `Fuchsia`, etc.
    - **Set dark theme by default**: The current setting for the whole team, it could improve focus and reduce eye strain. The screen will switch to dark theme on enable.
6. **Configure privacy:** The step's name is `5/7`
   - **Show login wall**: Turn on if want to hide the main screen from guests and anonymous users. Only logged-in users will be able to access the chat interface.
   - **Allow user to create private AI agents**: If turned on, users can create their own AI agents for private use. These AI agents will only be available to the user who created them by default.
   - **Record chat conversations**: If turned on, all chat messages will be recorded and can be viewed by admin users in Chat Logs. It says `We do not analyze your team's chat data for LLM training purposes.`
7. **Set default content:** The step's name is `6/7`
   - Set the default content in the chat including AI Agents, Plugins, Prompt Library, Knowledge Base. Click on the related text to set up.
   - AI Agents : Customize and create specialized AI agents to solve real business tasks and answer questions better.
   - Plugins : Boost the AI and connect with existing tools and infrastructure.
   - Prompt Library : Prompts are message templates that users can quickly use in chat, or work with AI agents, or building their workflow.
   - Knowledge Base : Boost the AI's knowledge with the organization's data and documents.
8. **Invite Users:** The step's name is `7/7`
   - Invite team members to start using TypingMind Custom! Add the user emails in the textbox to invite.
   - Can check the checkbox to notify users via email
   - The list includes current users and number of seats remaining

### 3. Invite Team Members
1. To invite user to the team workspace, go to set up your AI workspace -> Users, or find it by searching at Dashboard for Users.
2. Enter team members' email addresses here. One email per line.
3. User can chose the email.
 4. After creating a new user, it displays that new user and the text `invitied`.
5. There are Admin roles for each user as well.

### 4. Start Using the Custom Portal
After completing the setup and inviting team members, the custom AI chat portal is ready to be used.

### 5. Manage from Dashboard
Besides the set up progress, can also manage from Dashboard tab, such as
- Analytics
- Chat Logs
- Set the system prompt
and more.
</TEAM_VERSION_GETTING_STARTED>


<RECENT_COMMON_TECHNICAL_ISSUES_FOR_SUPPORT>
### Support Channels and Guidelines

1. **Current Support Channels:**
    - Primary Email: support@typingmind.com
    - Bug Report Form: typingmind.com/report-bug
    - Note: Discord server discontinued as of Feb 10, 2025

2. **Common Issues and Solutions:**
    
    a. **Failed Fetch During Custom Model Setup:**
    - Issue: "Failed to fetch" error when testing custom model
    - Cause: API key formatting in custom header
    - Solution: Remove quotation marks/brackets around API key
    
    b. **Search Function Errors:**
    - Issue: "Cannot read properties of undefined (reading 'map')"
    - Cause: No search results found
    - Verification: Test with simple queries like "What is the current gold price?"
    
    c. **Claude CORS Errors:**
    - Issue: CORS requests not allowed due to custom retention settings
    - Solution: Change Anthropic endpoint to https://cloud2.typingmind.com/api/claude/v1/messages
    
    d. **Sync Issues:**
    - Issue: Chats excluded from sync
    - Cause: Chat size exceeds 3MB limit
    - Solution: Delete large files/images to reduce chat size
    
    e. **Model Access Errors:**
    - Issue: "The model `o3-mini` does not exist or you do not have access"
    - Requirement: OpenAI Usage Tier 3-5 needed
    - Note: Access granted gradually by OpenAI team

3. **Error Message Handling Protocol:**
    - Confirm error cause with user before providing solution
    - Use provided "Common Issues" solutions first
    - Redirect to Bug Report form for unresolved issues

4. **Feature Request Management:**
    - Direct users to: typingmind.com/ideas
    - Maintain record of requested features
    - Update users on feature implementation status
</RECENT_COMMON_TECHNICAL_ISSUES_FOR_SUPPORT>

<PLATFORM_DETAILS_AND_UPDATES>
### Platform Information

1. **Program Status Updates:**
    - **Affiliate Program:**
        - Status: Temporarily paused
        - Effective Date: January 1, 2025
        - Note: Only reseller program for TypingMind Custom remains active
    
    - **Discord Community:**
        - Status: Discontinued
        - Date: February 10, 2025
        - Reason: Centralization of customer support
        - Current Support: support@typingmind.com

4. **SetApp Integration:**
    - **Access Methods:**
        - Web App: Access through Setapp > TypingMind > "Open Web App"
        - Native App: Continued support for existing installations
    - **Authentication:**
        - Requires Setapp account credentials
        - Seamless integration with SetApp ecosystem
</PLATFORM_DETAILS_AND_UPDATES>

<OTHER_TECHNICAL_INFO>
### Other Technical Details

1. **URL Parameters and Integration:**
    - **Message Prefilling:**
        - Format: typingmind.com/?message=your_message_here
        - Use Case: Quick access to specific prompts
        - Integration: Compatible with Raycast
    
2. **Data Storage Architecture:**
    - **Primary Storage:**
        - Local Storage: User preferences and settings
        - IndexedDB: Chat history and larger data sets
    
    - **Size Limitations:**
        - Chat Sync Limit: 3MB per chat
        - Storage Quota: Browser-dependent
        - Note: Exceeding limits requires data cleanup

3. **Security and Compliance:**
    - **Certifications:**
        - SOC 2 Certified
        - GDPR Compliant
        - HIPAA Compliant
    
    - **Security Features:**
        - Data Encryption: In transit and at rest
        - API Key Protection: Local storage with encryption options
        - Security Documentation: https://trust.typingmind.com/
    
    - **Data Usage Policy:**
        - API Data: Not used for model training
        - OpenAI Compliance: Adheres to OpenAI's data usage guidelines

4. **Model-Specific Technical Details:**
    - **Access Requirements:**
        - o1/o3 Models: Usage Tier 3-5 minimum
        - Plugin Support: Model-dependent
        - Video Processing: Supported by Gemini models
    
    - **API Limitations:**
        - o1-preview and o1-mini: No plugin support
        - Grok 3: API access pending
        - Custom Models: OpenAI-compatible API endpoint required

5. **Performance Optimization:**
    - **Sync Optimization:**
        - Large File Handling: Break down into smaller components
        - Cache Management: Regular cleanup recommended
        - Automatic Sync: Size-based exclusion
    
    - **Error Prevention:**
        - API Key Formatting: Remove extraneous characters
        - Search Queries: Test with simple queries first
        - CORS Handling: Use recommended endpoints
</OTHER_TECHNICAL_INFO>

</PRODUCT_KNOWLDEGE_MAP>
